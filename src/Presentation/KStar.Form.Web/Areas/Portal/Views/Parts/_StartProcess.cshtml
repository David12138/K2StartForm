<div id="app" class="map bg-white pd-24 height-100 home-index">
    <el-row style="width: 75%;float:left;box-sizing:border-box">
        <el-col :lg="8" :sm="12" :xs="12" class="left">
            <el-row>
                <el-input size="medium" :placeholder="$t('Portal.StartProcessPlaceholderCategory')" v-model="keyword" class="search" v-on:keyup.enter.native="getSearchTree"></el-input>
                <el-button size="medium" type="primary" class="search-btn" plain v-on:click="getSearchTree">{{ $t("Portal.StartProcessSearchShort") }}</el-button>
            </el-row>
            <el-tree
                class="filter-tree"
                :data="treeData"
                :props="defaultProps"
                node-key="id"
                :default-expanded-keys="defaultExpandedKeys"
                accordion
                highlight-current
                :filter-node-method="filterNode"
                v-on:node-click="nodeClick"
                ref="refTree">
                </el-tree>
        </el-col>
        <el-col :lg="16" :sm="12" :xs="12" class="right">
            <el-row class="one">
                <el-col :span="14">
                    <el-input size="medium" :placeholder="$t('Portal.StartProcessPlaceholderProcess')" v-model="form.processName" class="search" v-on:keyup.enter.native="searchContent"></el-input>
                    <el-button size="medium" type="primary" class="search-btn" v-on:click="searchContent" plain>{{ $t("Portal.StartProcessSearch") }}</el-button>
                </el-col>
                <el-col :span="6">
                    <el-checkbox v-model="form.isFull" v-on:change="changeCheckbox">{{ $t("Portal.StartProcessShowAllProcess") }}</el-checkbox>
                </el-col>
            </el-row>
            <el-row :gutter="16" class="map-content">
                <el-col :lg="24" :sm="24" :xs="24" v-for="(item, index) in list" :key="index" class="li">
                    <i :class="item.IsFavorite ? 'el-icon-star-on' : 'el-icon-star-off' "  v-if="item.StartUrl && !item.isOtherSystem && item.IsAuthority" v-on:click="WorkflowFavorite(item)"></i>
                    <el-row class="title" v-if="item.StartUrl && !item.isOtherSystem && item.IsAuthority">
                        <a href="javascript:;" v-on:click="gotoDetail(item)" :title="item.ProcessName" v-if="!checkProcessRemark(item.ProcessRemark)">{{item.ProcessName}}</a>
                        <el-popover placement="top-start" :title="item.ProcessName" width="250" trigger="hover" v-else>
                            <el-row><el-col v-html="item.ProcessRemark"></el-col></el-row>
                            <a href="javascript:;" slot="reference" v-on:click="gotoDetail(item)">{{ item.ProcessName }}</a>
                        </el-popover>
                    </el-row>
                    <el-row class="title font-gray" v-else>
                        <a href="javascript:;" :title="item.ProcessName"  v-if="!checkProcessRemark(item.ProcessRemark)">{{ item.ProcessName }}</a>
                        <el-popover placement="top-start" :title="item.ProcessName" width="250" trigger="hover"v-else >
                            <el-row><el-col v-html="item.ProcessRemark"></el-col></el-row>
                            <a href="javascript:;" slot="reference">{{ item.ProcessName }}</a>
                        </el-popover>
                        <sup>{{ !item.IsAuthority ? $t('Portal.StartProcessIconAuth') : item.isOtherSystem ? $t('Portal.StartProcessIconExternalSystem') : '' }}</sup>
                    </el-row>
                </el-col>
                <el-col class="no-result" v-if="list.length == 0"></el-col>
            </el-row>
        </el-col>
    </el-row>
    <div class="right-content " style="padding: 0;width: 25%">
        <el-tabs v-model="activeNameRight" v-on:tab-click="tabClickTwo">
            <el-tab-pane name="first" >
                <span slot="label">{{ $t("Portal.MyFavorites") }}</span>
            </el-tab-pane>
            <el-tab-pane name="second">
                <span slot="label">{{ $t("Portal.MyFrequentlyUsed") }}</span>
            </el-tab-pane>
        </el-tabs>
        <el-row class="list" v-loading="elTabsTwoLoading">
            <el-col v-for="(item, index) in listRight" :key="index" class="li">
                <el-col :span="3" class="li-left text-align-center" v-if="activeNameRight == 'first'"  v-on:click.native="delWorkflowFavorite(item)" style="border-right-width:0">
                    <el-row><i class="el-icon-star-on"></i></el-row>
                    <!-- <el-row class="info">{{ $t("Portal.MyFavoritesDel") }}</el-row> -->
                </el-col>
                <el-col :span="activeNameRight == 'first' ? 21 : 24" class="li-right">
                    <el-row v-on:click.native="gotoDetails(item.Url)"><a href="javascript:;"  class="title" :title="item.Name">{{ item.Name }}</a></el-row>
                    <el-row class="ellipsis-one info" :title="item.Path ? item.Path.replace(/,/g, '/') : ''">{{ item.Path ? item.Path.replace(/,/g, '/') : '' }}</el-row>
                </el-col>
            </el-col>
            <div class="addmore" v-on:click="changePage('right')" 
                v-if="activeNameRight =='first' && listRight.length < myFavoriteWorkflowTotal || activeNameRight =='second' && listRight.length < commonWorkflowTotal">
                <p>{{ $t("Portal.HomeLoadMore") }}<i class="el-icon-arrow-down"></i></p>
            </div>
        </el-row>
    </div>
</div>


<script>
    new Vue({
        el: '#app',
        i18n: i18n,
        data: function () {
            return {
                form: {
                    processName: '',
                    categoryId: '',
                    isFull: false
                },
                treeData: [],
                defaultProps: {
                    children: 'children',
                    label: 'label'
                },
                list: [],
                treeLoading: false,
                loading: false,
                keyword: '',
                defaultExpandedKeys: [],

                activeNameRight: 'first',
                commonWorkflowList: [], // 常用列表
                commonWorkflowPageSize: 10, // 常用列表页数
                commonWorkflowPageIndex: 1, // 常用列表当前页码
                commonWorkflowTotal: 0, // 常用列表总条数

                myFavoriteWorkflowList: [], // 我的收藏列表
                myFavoriteWorkflowPageSize: 10, // 我的收藏列表页数
                myFavoriteWorkflowPageIndex: 1, // 我的收藏列表当前页码
                myFavoriteWorkflowTotal: 0, // 我的收藏列表总条数
                listRight: [],
                elTabsTwoLoading: true,
            }
        },
        mounted: function () {
            this.getNewProcessMapByCategory()
            this.getMyFavoriteWorkflow()
            this.getCommonWorkflow()
        },
        methods: {
            // 获取我的收藏
            getMyFavoriteWorkflow: function() {
                var that = this
                this.elTabsTwoLoading = true
                GetMyFavoriteWorkflow({
                    pageIndex: 1,
                    pageSize: that.myFavoriteWorkflowPageSize * that.myFavoriteWorkflowPageIndex
                }).then(function(res) {
                    that.elTabsTwoLoading = false
                    that.myFavoriteWorkflowList = res.data.data.items
                    that.myFavoriteWorkflowTotal = res.data.data.count
                    if (that.activeNameRight == 'first') {
                        that.listRight = that.myFavoriteWorkflowList
                    }
                })
            },
            // 获取常用流程
            getCommonWorkflow: function() {
                var that = this
                this.elTabsTwoLoading = true
                GetCommonWorkflow({
                    pageIndex: 1,
                    pageSize: that.commonWorkflowPageSize * that.commonWorkflowPageIndex
                }).then(function(res) {
                    that.elTabsTwoLoading = false
                    that.commonWorkflowList = res.data.data
                    that.commonWorkflowTotal = res.data.data.count
                    if (that.activeNameRight == 'second') {
                        that.listRight = that.commonWorkflowList
                    }
                })
            },
            // 收藏和常用tab点击事件
            tabClickTwo: function() {
                if (this.activeNameRight == 'first') {
                    this.listRight = this.myFavoriteWorkflowList
                } else {
                    this.listRight = this.commonWorkflowList
                }
            },
            // 取消收藏
            delWorkflowFavorite: function (item, index) {
                //that.$message.success(this.$t("Portal.MyFavoritesDelSuccess"))
                var that = this
                DelWorkflowFavorite({ processCode: item.ProcessCode }).then(function (res) {
                    that.$message.success(that.$t("Portal.MyFavoritesDelSuccess")) //'取消收藏成功'
                    that.getNewProcessMapByProcess()
                    that.getMyFavoriteWorkflow()         
                });
                portalLog("首页-取消收藏", "/Portal/WorkFlow/DelWorkflowFavorite");
            },
            // 去详情页
            gotoDetails: function(url, IsRead) {
                window.open(url,'_blank');
            },
            // 改变页码
            changePage: function(type) {
                if(type == 'right' && this.activeNameRight == 'first') {
                    this.myFavoriteWorkflowPageIndex = this.myFavoriteWorkflowPageIndex + 1
                    this.getMyFavoriteWorkflow()
                } else if (type == 'right' && this.activeNameRight == 'second') {
                    this.commonWorkflowPageIndex = this.commonWorkflowPageIndex + 1
                    this.getCommonWorkflow()
                }
            },


            // 获取树的的内容
            getNewProcessMapByCategory: function() {
                var that = this
                var data = {
                    isFull: that.form.isFull
                }
                GetNewProcessMapByCategory(data).then(function(res) {
                    that.treeData = res.data.data
                    if (that.treeData.length) {
                        // that.form.categoryId = that.treeData[0].id
                       // that.getNewProcessMapByProcess()
                        // that.defaultExpandedKeys.push(that.treeData[0].id)
                    }
                    
                })
            },
            // 是否显示全部流程
            changeCheckbox: function(val) {
                this.getNewProcessMapByCategory()
                this.getNewProcessMapByProcess()
            },
            filterNode: function(value, data) {
                if (!value) return true;
                return data.label.indexOf(value) !== -1;
            },
            nodeClick: function(data, node, obg) {
                this.form.categoryId = data.id
                this.defaultExpandedKeys = [data.id]
                this.form.processName = ''
                this.getNewProcessMapByProcess()
            },
            // 查询
            getNewProcessMapByProcess: function () {
                var that = this
                GetNewProcessMapByProcess(that.form).then(function(res) {
                    that.list = res.data.data
                })
            },
            // 流程收藏/取消收藏
            WorkflowFavorite: function (val) {
                var that = this
                if (val.IsFavorite) {
                    DelWorkflowFavorite({
                        processCode: val.ProcessCode
                    }).then(function (res) {
                        if (res.data.code == 200) {
                            that.$message.success(that.$t('Portal.StartProcessUnFavoritesSuccess'))//'取消收藏成功'
                        } else {
                            that.$message.error(that.$t('Portal.StartProcessUnFavoritesFailed'))//'取消收藏失败'
                        }
                        that.getNewProcessMapByProcess()
                        that.getMyFavoriteWorkflow()
                    }).catch(function (err) {
                        that.$message.error(that.$t('Portal.StartProcessOperationException') + err.message) //'数据获取失败!ERROR MESSAGE:'
                    });
                    portalLog("流程地图-取消收藏", "/Portal/WorkFlow/DelWorkflowFavorite");
                } else {
                    AddWorkflowFavorite({
                        processCode: val.ProcessCode
                    }).then(function (res) {
                        if (res.data.code == 200) {
                            that.$message.success(that.$t('Portal.StartProcessFavoritesAddSuccess'))//'收藏成功'
                        } else {
                            that.$message.error(that.$t('Portal.StartProcessFavoritesAddFailed'))//'收藏失败'
                        }
                        that.getNewProcessMapByProcess()
                        that.getMyFavoriteWorkflow()
                    }).catch(function (err) {
                        that.$message.error(that.$t('Portal.StartProcessOperationException') + err.message)//'数据获取失败!ERROR MESSAGE:'
                    });
                    portalLog("流程地图-流程收藏", "/Portal/WorkFlow/AddWorkflowFavorite");
                }

            },
            searchContent: function() {
                this.getNewProcessMapByProcess()
            },
            getSearchTree: function() {
                this.$refs.refTree.filter(this.keyword);
            },
            // 去详情页
            gotoDetail: function (val) {
                if (val.StartUrl) {
                   window.open(val.StartUrl, '_blank')
                }
            },
            // 判断说明是否有值
            checkProcessRemark: function(val) {
                if (val && val.toString().replace(/<[^<>]+>/g,'').trim().length > 0) {
                    return true
                } else {
                    return false
                }
            }
        }
    })
</script>


