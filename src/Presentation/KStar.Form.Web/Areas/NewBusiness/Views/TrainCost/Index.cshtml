
@{
    ViewBag.Title = "培训业务费用申请";
    Layout = "~/Views/Shared/_KStarFormLayout.cshtml";
}


@section HeadStyle{
    <style>
        .helper-inline-block {
            display: inline-block;
        }

        .cell .el-form-item__error.el-form-item__error--inline {
            position: inherit !important;
            bottom: unset !important;
        }
    </style>
    <style type="text/css" media="print">
        .el-col.el-col-24.el-col-xs-24.el-col-sm-12 {
            width: 50%;
        }

        form {
            font-size: 16px;
        }
    </style>
}

<el-form :model="vmFormContent" :rules="formContentValidateRules" ref="refFormContent" label-width="120px" inline-message size="mini"
         label-position="rigth">

    <el-row>
        <el-col>
            <el-form-item label="是否成都区" prop="isChengdu" :rules="{required: true, message: '请选择是否成都区'}">
                <el-select v-if="isFormCanBeEdit"
                           placeholder="请选择"
                           v-model="vmFormContent.isChengdu">
                    <el-option value="是"></el-option>
                    <el-option value="否"></el-option>
                </el-select>
                <div v-else class="form-item-div">{{ vmFormContent.isChengdu }}</div>
            </el-form-item>
        </el-col>
    </el-row>
    <el-row>
        <el-col>
            <el-form-item label="申请事由" prop="Reasons" :rules="{required: false, message: '请填写申请事由'}">
                <el-input v-if="isFormCanBeEdit" type="text" placeholder="请填写申请事由" v-model="vmFormContent.Reasons"></el-input>
                <div v-else class="form-item-div">{{ vmFormContent.Reasons }}</div>
            </el-form-item>
        </el-col>
    </el-row>
    <el-row>
        <el-col>
            <el-form-item label="付款公司名称" prop="NameOfPayingCompany">
                <el-select v-if="isFormCanBeEdit" v-model="vmFormContent.NameOfPayingCompany">
                    <el-option value="成都新大瀚人力资源管理有限公司"></el-option>
                    <el-option value="成都激水信息技术有限公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司江苏分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司成华分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司高新分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司广州分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司厦门分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司北京分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司上海分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司苏州分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司深圳分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司银川分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司大连分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司南京分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司武汉分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司宁波分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司青岛分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司西安分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司呼和浩特分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司石家庄分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司合肥分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司郑州分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司哈尔滨分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司太原分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司兰州分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司长春分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司海口分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司重庆渝北分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司天府新区分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司新疆分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司济南分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司沈阳分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司东莞分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司昆明盘龙分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司江西分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司杭州分公司"></el-option>
                    <el-option value="成都瀚将企业管理咨询有限公司"></el-option>
                    <el-option value="成都瀚砂科技有限责任公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司佛山分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司东莞分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司中山分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司珠海市分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司江门分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司肇庆分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司惠州分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司汕头分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司潮州分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司揭阳分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司汕尾分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司湛江分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司茂名分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司阳江分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司云浮分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司韶关市分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司清远分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司梅州分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司河源分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司安徽分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司福州分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司泉州分公司"></el-option>
                    <el-option value="成都新大瀚人力资源管理有限公司青海分公司"></el-option>
                </el-select>
                <div v-else class="form-item-div">{{ vmFormContent.NameOfPayingCompany}}</div>
            </el-form-item>
        </el-col>
    </el-row>
    <el-row>
        <el-col>
            <el-form-item label="支付方式" prop="PayMethod" :rules="{required: true, message: '请填写支付方式'}">
                <el-select v-if="isFormCanBeEdit"
                           placeholder="请选择"
                           v-model="vmFormContent.PayMethod">
                    <el-option value="网银转账"></el-option>
                </el-select>
                <div v-else class="form-item-div">{{ vmFormContent.PayMethod }}</div>
            </el-form-item>
        </el-col>
    </el-row>
    <el-row>
        <el-col>
            <el-form-item label="申请金额" prop="ApplicationAmount_" :rules="{required: false, message: '请填写申请金额'}">
                <el-input v-if="isFormCanBeEdit" type="text" placeholder="请填写申请金额" v-model="vmFormContent.ApplicationAmount_"></el-input>
                <div v-else class="form-item-div">{{ vmFormContent.ApplicationAmount_ | transformToFixed }}</div>
            </el-form-item>
        </el-col>
    </el-row>
    <el-row>
        <el-col>
            <el-form-item label="金额大写">
                <div class="form-item-div">{{ vmFormContent.ApplicationAmount_| transformToFixed | captialAmount }}</div>
            </el-form-item>
        </el-col>
    </el-row>
    <subtitle subtitle="账单信息" class="line-sub-title"></subtitle>
    <el-table :data="vmFormContent.TableBillInfos" border>
        <el-table-column align="center" v-if="isFormCanBeEdit">
            <template v-slot:header="{ column, $index }">
                <el-button icon="el-icon-plus" type="success" size="mini" circle
                           v-on:click="handleAddBillInfo($index, column)" id="IncomeButton"></el-button>
            </template>
            <template v-slot:default="{ row, column, $index }">
                <el-button type="danger" size="mini" plain
                           v-on:click="handleDeleteBillInfo($index, row, column)">删除</el-button>
            </template>
        </el-table-column>
        <el-table-column label="序号" type="index" show-overflow-tooltip width="50" align="center">
        </el-table-column>
        <el-table-column label="费用类型" header-align="center" width="200" property="FeeType">
            <template v-slot:default="{ row, column, $index }">
                <el-form-item label-width="0" :prop="'TableBillInfos.' + $index + '.FeeType'"
                              :rules="{required: true, message: '请选择费用类型'}">
                    <el-select v-if="isFormCanBeEdit" style="width: 100%;"
                               placeholder="请选择"
                               v-model="row.FeeType">
                        <el-option value="社保"></el-option>
                        <el-option value="公积金"></el-option>
                        <el-option value="残疾保障金"></el-option>
                        <el-option value="滞纳金"></el-option>
                        <el-option value="服务费"></el-option>
                        <el-option value="其他"></el-option>
                    </el-select>
                    <div v-else class="form-item-div">{{ row.FeeType }}</div>
                </el-form-item>
            </template>
        </el-table-column>
        <el-table-column label="单位部分(元)" header-align="center" width="135" property="UnitPart">
            <template v-slot:default="{ row, column, $index }">
                <el-form-item label-width="0" :prop="'TableBillInfos.' + $index + '.UnitPart'"
                              :rules="{required: false, message: '请输入单位部分'}">
                    <el-input v-model="row.UnitPart" v-if="isFormCanBeEdit" style="width: 100%;"
                              size="mini" type="number"></el-input>
                    <div v-else class="form-item-div">{{ row.UnitPart }}</div>
                </el-form-item>
            </template>
        </el-table-column>
        <el-table-column label="个人部分(元)" header-align="center" width="135" property="PersonalPart">
            <template v-slot:default="{ row, column, $index }">
                <el-form-item label-width="0" :prop="'TableBillInfos.' + $index + '.PersonalPart'"
                              :rules="{required: false, message: '请输入个人部分'}">
                    <el-input v-model="row.PersonalPart" v-if="isFormCanBeEdit" style="width: 100%;"
                              size="mini" type="number"></el-input>
                    <div v-else class="form-item-div">{{ row.PersonalPart }}</div>
                </el-form-item>
            </template>
        </el-table-column>
        <el-table-column label="总金额(元)" header-align="center" width="135" property="TotalAmount">
            <template v-slot:default="{ row, column, $index }">
                <el-form-item label-width="0" :prop="'TableBillInfos.' + $index + '.TotalAmount'"
                              :rules="{required: false, message: '请输入总金额'}">
                    <el-input v-model="row.TotalAmount" v-if="isFormCanBeEdit" style="width: 100%;"
                              size="mini" type="number"></el-input>
                    <div v-else class="form-item-div">{{ row.TotalAmount }}</div>
                </el-form-item>
            </template>
        </el-table-column>
        <el-table-column label="收款方名称" header-align="center" width="200" property="NameOfPayee">
            <template v-slot:default="{ row, column, $index }">
                <el-form-item label-width="0" :prop="'TableBillInfos.' + $index + '.NameOfPayee'"
                              :rules="{required: false, message: '请输入收款方名称'}">
                    <el-input v-model="row.NameOfPayee" v-if="isFormCanBeEdit" style="width: 100%;"
                              size="mini"></el-input>
                    <div v-else class="form-item-div">{{ row.NameOfPayee }}</div>
                </el-form-item>
            </template>
        </el-table-column>
        <el-table-column label="收款方开户行" header-align="center" width="200" property="OpeningBankOfPayee">
            <template v-slot:default="{ row, column, $index }">
                <el-form-item label-width="0" :prop="'TableBillInfos.' + $index + '.OpeningBankOfPayee'"
                              :rules="{required: false, message: '请输入收款方开户行'}">
                    <el-input v-model="row.OpeningBankOfPayee" v-if="isFormCanBeEdit" style="width: 100%;"
                              size="mini"></el-input>
                    <div v-else class="form-item-div">{{ row.OpeningBankOfPayee }}</div>
                </el-form-item>
            </template>
        </el-table-column>
        <el-table-column label="收款方账号" header-align="center" width="200" property="AccountOfPayee">
            <template v-slot:default="{ row, column, $index }">
                <el-form-item label-width="0" :prop="'TableBillInfos.' + $index + '.AccountOfPayee'"
                              :rules="{required: false, message: '请输入收款方账号'}">
                    <el-input v-model="row.AccountOfPayee" v-if="isFormCanBeEdit" style="width: 100%;"
                              size="mini"></el-input>
                    <div v-else class="form-item-div">{{ row.AccountOfPayee }}</div>
                </el-form-item>
            </template>
        </el-table-column>
        <el-table-column label="打款备注" header-align="center" width="250" property="Remarks">
            <template v-slot:default="{ row, column, $index }">
                <el-form-item label-width="0" :prop="'TableBillInfos.' + $index + '.Remarks'"
                              :rules="{required: false, message: '请输入备注'}">
                    <el-input v-model="row.Remarks" v-if="isFormCanBeEdit" style="width: 100%;"
                              size="mini"></el-input>
                    <div v-else class="form-item-div">{{ row.Remarks }}</div>
                </el-form-item>
            </template>
        </el-table-column>
    </el-table>
    <el-row>
        <el-col>
            <el-form-item label="其他说明" prop="otherReasons" :rules="{required: false, message: '请填写其他说明'}">
                <el-input v-if="isFormCanBeEdit" type="text" placeholder="请填写其他说明" v-model="vmFormContent.otherReasons"></el-input>
                <div v-else class="form-item-div">{{ vmFormContent.otherReasons }}</div>
            </el-form-item>
        </el-col>
    </el-row>
</el-form>

@section KStarFormJs{
    <script src="~/Scripts/NewBusiness/CascaderAreaModel.js"></script>
    <script type="text/javascript">
        FormContentModel = {
            totalActualPaySalaryAmount: null,
            totalAmount: null
        };
        KStarForm.formModelExtend = {
            data: function () {
                var onlyCity = ArrcascaderAreaAll;
                onlyCity.forEach(function (v) {
                    v.children.forEach(function (v2) {
                        v2.children = null;
                    })
                })
                return {
                    ArrcascaderAreaAll: onlyCity,
                    formContentValidateRules: {

                    },
                    // 新版本新增，可以控制整个表单中除vmFormContent外的组件的验证规则
                    formContentRules: {

                    }
                }
            },
            methods: {
                handleAddBillInfo: function (index, column) {
                    this.vmFormContent.TableBillInfos.push({
                        "FeeType": null,
                        "UnitPart": null,
                        "PersonalPart": null,
                        "TotalAmount": null,
                        "NameOfPayee": null,
                        "OpeningBankOfPayee": null,
                        "AccountOfPayee": null,
                        "Remarks": null,
                    });
                },
                handleDeleteBillInfo: function (index, row, column) {
                    this.vmFormContent.TableBillInfos.splice(index, 1);
                },

                handleAccountInfoChange: function (info, b) {
                    this.vmFormContent.TmpCollectionAccountInfo.Id = info.Id;
                    this.vmFormContent.TmpCollectionAccountInfo.Name = info.Name;
                    this.vmFormContent.TmpCollectionAccountInfo.BankOfDeposit = info.BankOfDeposit;
                    this.vmFormContent.TmpCollectionAccountInfo.Account = info.Account;
                    //debugger;
                },
                searchClientInfo: function (v) {
                    var that = this;

                    axios.post(getControllerName() + "/SearchClientInfo", {
                        name: v
                    }).then(function (r) {
                        that.vmFormContent.ListClients = r.data;
                    })
                },
                searchAccountInfo: function (v, cb) {
                    var that = this;

                    axios.post(getControllerName() + "/SearchAccountInfo", {
                        key: v
                    }).then(function (r) {
                        cb(r.data);
                        //that.vmFormContent.ListCollectionAccountInfo = r.data;
                    })
                },

                getSummary: function (param) {
                    var funcFixed = this.$options.filters["transformToFixed"];
                    var that = this;
                    var columns = param.columns;
                    var data = param.data;
                    var sums = [];
                    _.each(columns, function (column, idx) {
                        //debugger
                        if (idx == 0) {
                            sums[0] = '合计';
                            //return;
                        } else if (idx > 5 && idx < 12) {

                            var values = _.map(data, function (val) {
                                var tmp = parseFloat(val[column.property]);
                                return isNaN(tmp) ? 0 : tmp;
                            });

                            var colSum = _.reduce(values, function (prev, v) {
                                return prev + v;
                            });
                            sums[idx] = idx > 6 ? funcFixed(colSum) : colSum;
                            if (column.property == 'ActualPaySalaryAmount')
                                that.vmFormContent.totalActualPaySalaryAmount = parseFloat(sums[idx]);
                            else if (column.property == 'Amount')
                                that.vmFormContent.totalAmount = parseFloat(sums[idx]);
                        } else {
                            sums[idx] = '';
                        }
                    });
                    return sums;
                },

            },
            computed: {
                isFormCanBeEdit: function () {
                    return this.vmFormType == 'Application' || this.vmFormType == 'Draft' || this.vmFormType == 'ReApproval';
                },
                isActAccounting: function () {
                    var curActName = this.vmOperation.ActivityName;
                    return curActName == '会计审核' && this.vmFormType == 'Approval';
                }
            },
            filters: {
                transformToFixed: function (value, fixedCount = 2) {
                    if (!value || isNaN(value) || !isFinite(value)) return '';
                    var x = parseFloat(value);
                    return x.toFixed(fixedCount);
                },
                captialAmount: function (n) {
                    if (!/^(0|[1-9]\d*)(\.\d+)?$/.test(n)) {
                        return ''
                    }
                    var unit = "仟佰拾亿仟佰拾万仟佰拾圆角分", str = "";
                    n += "00";
                    var p = n.indexOf('.');
                    if (p >= 0)
                        n = n.substring(0, p) + n.substr(p + 1, 2);

                    unit = unit.substr(unit.length - n.length);

                    for (var i = 0; i < n.length; i++)
                        str += '零壹贰叁肆伍陆柒捌玖'.charAt(n.charAt(i)) + unit.charAt(i);
                    var result = str.replace(/零(仟|佰|拾|角)/g, "零").replace(/(零)+/g, "零").replace(/零(万|亿|圆)/g, "$1").replace(/(亿)万|壹(拾)/g, "$1$2").replace(/^圆零?|零分/g, "").replace(/圆$/g, "圆整");
                    return result == '分' ? '' : result;
                },
                formatDate: function (v) {
                    var m = moment(v);
                    if (m.isValid())
                        return moment.utc(v).format('YYYY-MM-DD');
                    else
                        return '';
                }
            },
            watch: {
                'vmFormContent.PayMethod': function (nv, ov) {
                    if (nv == '云账户') {
                        this.vmFormContent.AgentCommission = this.vmFormContent.totalActualPaySalaryAmount * 0.071;
                    } else {
                        this.vmFormContent.AgentCommission = 0;
                    }

                    this.vmFormContent.ApplicationAmount = this.vmFormContent.totalAmount + this.vmFormContent.AgentCommission;
                },
                'vmFormContent.TableBillInfos': {
                    handler: function (nv) {

                        _.each(nv, function (v, idx) {
                            var peopleNumber = isNaN(parseInt(v.PeopleNumber)) ? 0 : parseInt(v.PeopleNumber);
                            var actualPaySalaryAmount = isNaN(parseFloat(v.ActualPaySalaryAmount)) ? 0 : parseFloat(v.ActualPaySalaryAmount);
                            var socialInsurance = isNaN(parseFloat(v.SocialInsurance)) ? 0 : parseFloat(v.SocialInsurance);
                            var housingFund = isNaN(parseFloat(v.HousingFund)) ? 0 : parseFloat(v.HousingFund);
                            var serviceFee = Math.round(parseFloat(actualPaySalaryAmount / 1000 * 5) * 100) / 100;
                            v.ServiceFee = serviceFee;
                            v.Amount = actualPaySalaryAmount + socialInsurance + housingFund + serviceFee;
                        })
                        calculation();
                    },
                    deep: true
                },
                'vmFormContent.totalActualPaySalaryAmount': function (nv) {
                    if (this.vmFormContent.PayMethod == '云账户') {
                        this.vmFormContent.AgentCommission = nv * 0.071;
                    } else {
                        this.vmFormContent.AgentCommission = 0;
                    }

                    this.vmFormContent.ApplicationAmount = this.vmFormContent.totalAmount + this.vmFormContent.AgentCommission;

                },
                'vmFormContent.totalAmount': function (nv) {
                    if (this.vmFormContent.PayMethod == '云账户') {
                        this.vmFormContent.AgentCommission = this.vmFormContent.totalActualPaySalaryAmount * 0.071;
                    } else {
                        this.vmFormContent.AgentCommission = 0;
                    }

                    this.vmFormContent.ApplicationAmount = nv + this.vmFormContent.AgentCommission;
                }
            },
            mounted: function () {
                // 将账单信息中的客户信息加载到可选列表中，以支持正确显示
                //clientsNeedToAdd = [];
                var currentClientListOptions = this.vmFormContent.ListClients || [];
                _.each(this.vmFormContent.TableBillInfos, function (bill, idx) {
                    if (!bill.ClientName)
                        return false;
                    var clientCode = bill.ClientName.Code;
                    var idxFinded = _.findIndex(currentClientListOptions, function (c) {
                        return c.Code == clientCode;
                    });
                    if (idxFinded == -1) {
                        currentClientListOptions.push(bill.ClientName);
                    }
                });
            }
        }

        var SubmitBefore = function () {
            var canBeSubmit = true;

            //var lineApplyUnit = KStarForm.vmFormData.vmFormContent.lineApplyUnit;
            //if (!lineApplyUnit) {
            //    canBeSubmit = false;
            //    alertInfo("不能获取申请人的申请单位！不能提交！")
            //}

            var that = KStarForm.vmFormData;
            var isFormCanBeEdit = that.vmFormType == 'Application' || that.vmFormType == 'Draft' || that.vmFormType == 'ReApproval';
            if (!isFormCanBeEdit) {
                return canBeSubmit;
            }

            var fileCount = KStarForm.vmFormData.vmFormAttachments.length;
            if (fileCount < 1) {
                canBeSubmit = false;
                alertInfo("请您上传附件。");
                return canBeSubmit;
            }

            if (!calculation()) {
                canBeSubmit = false;
                return canBeSubmit;
            }

            var temp = parseFloat(that.vmFormContent.ApplicationAmount_)

            if (isNaN(temp) || temp <= 0) {
                canBeSubmit = false;
                alertInfo("请您填写申请金额。");
                return canBeSubmit;
            }
            return canBeSubmit;
        }
        //发起
        KStarForm.onSubmitBefore = SubmitBefore;
        //重新发起
        KStarForm.onReSubmitBefore = SubmitBefore;

        function calculation() {
            var that = KStarForm.vmFormData;
            var isFormCanBeEdit = that.vmFormType == 'Application' || that.vmFormType == 'Draft' || that.vmFormType == 'ReApproval';
            if (!isFormCanBeEdit) {
                return true;
            }

            var FeeSchedule = that.vmFormContent.TableBillInfos;
            var TotalFee = 0;
            var TempTotal = 0;
            for (var i = 0; i < FeeSchedule.length; i++) {

                if (parseFloat(FeeSchedule[i].UnitPart) < 0) {
                    alertInfo("第" + (i + 1) + "行单位部分填写错误，该项必须>=0");
                    return false;
                }

                if (parseFloat(FeeSchedule[i].PersonalPart) < 0) {
                    alertInfo("第" + (i + 1) + "行个人部分填写错误，该项必须>=0");
                    return false;
                }

                //if (!luhnCheck(FeeSchedule[i].AccountOfPayee)) {
                //    alertInfo("第" + (i + 1) + "行收款账号填写错误。");
                //    return false;
                //}

                TempTotal = numToFixed(parseFloat(FeeSchedule[i].UnitPart)) + numToFixed(parseFloat(FeeSchedule[i].PersonalPart));
                FeeSchedule[i].TotalAmount = TempTotal;
                TotalFee += TempTotal;
            }

            if (FeeSchedule.length > 0) {
                that.vmFormContent.ApplicationAmount_ = numToFixed(TotalFee);
            }
            return true;

        }

        function luhnCheck(bankno) {
            if (!bankno) {
                return true;
            }
            var lastNum = bankno.substr(bankno.length - 1, 1); //取出最后一位（与luhn进行比较）
            var first15Num = bankno.substr(0, bankno.length - 1); //前15或18位
            var newArr = new Array();
            for (var i = first15Num.length - 1; i > -1; i--) { //前15或18位倒序存进数组
                newArr.push(first15Num.substr(i, 1));
            }
            var arrJiShu = new Array(); //奇数位*2的积 <9
            var arrJiShu2 = new Array(); //奇数位*2的积 >9
            var arrOuShu = new Array(); //偶数位数组
            for (var j = 0; j < newArr.length; j++) {
                if ((j + 1) % 2 == 1) { //奇数位
                    if (parseInt(newArr[j]) * 2 < 9) arrJiShu.push(parseInt(newArr[j]) * 2);
                    else arrJiShu2.push(parseInt(newArr[j]) * 2);
                } else //偶数位
                    arrOuShu.push(newArr[j]);
            }

            var jishu_child1 = new Array(); //奇数位*2 >9 的分割之后的数组个位数
            var jishu_child2 = new Array(); //奇数位*2 >9 的分割之后的数组十位数
            for (var h = 0; h < arrJiShu2.length; h++) {
                jishu_child1.push(parseInt(arrJiShu2[h]) % 10);
                jishu_child2.push(parseInt(arrJiShu2[h]) / 10);
            }

            var sumJiShu = 0; //奇数位*2 < 9 的数组之和
            var sumOuShu = 0; //偶数位数组之和
            var sumJiShuChild1 = 0; //奇数位*2 >9 的分割之后的数组个位数之和
            var sumJiShuChild2 = 0; //奇数位*2 >9 的分割之后的数组十位数之和
            var sumTotal = 0;
            for (var m = 0; m < arrJiShu.length; m++) {
                sumJiShu = sumJiShu + parseInt(arrJiShu[m]);
            }

            for (var n = 0; n < arrOuShu.length; n++) {
                sumOuShu = sumOuShu + parseInt(arrOuShu[n]);
            }

            for (var p = 0; p < jishu_child1.length; p++) {
                sumJiShuChild1 = sumJiShuChild1 + parseInt(jishu_child1[p]);
                sumJiShuChild2 = sumJiShuChild2 + parseInt(jishu_child2[p]);
            }
            //计算总和
            sumTotal = parseInt(sumJiShu) + parseInt(sumOuShu) + parseInt(sumJiShuChild1) + parseInt(sumJiShuChild2);

            //计算luhn值
            var k = parseInt(sumTotal) % 10 == 0 ? 10 : parseInt(sumTotal) % 10;
            var luhn = 10 - k;

            if (lastNum == luhn) {
                return true;
            } else {
                return false;
            }
        }

        function numToFixed(num) {
            if (isNaN(num)) {
                return 0;
            }
            num = num * 100;
            num = Math.round(num) / 100;
            num = num - 0;
            return num;
        }

    </script>
}

