{"version":3,"sources":["webpack:///src/components/views/transferStyle.vue","webpack:///./src/components/views/transferStyle.vue?c235","webpack:///./src/components/views/transferStyle.vue"],"names":["transferStyle","name","components","originator_dailog","computed","extends_default","bodyHeight","document","documentElement","clientHeight","Object","vuex_esm","created","param","this","debouncedSearchUser","lodash","getUsers","debouncedauthorizedUser","mounted","_this","that","promise_default","a","all","getOftenProcess","getOrganizeList","then","result","state","node","$refs","orgtree","getNode","orgID","organize","setCurrentKey","setOrganize","getChildenList","orgName","params","initEditForm","initAddForm","catch","error","$message","data","searchValParam","commonProcessIDs","checkedNodeProcessIDs","categoryID","headHeight","$route","query","pageIndex","pageSize","processList","userForm","authorUser","authorizedUser","recType","operator","util","getLocalStorage","operationDate","moment_default","Date","format","lotNumber","description","recTypeList","value","label","form","fromAuthorizingPerson","toAuthorizingPerson","loadingPerson","authType","queryName","orgStates","orgPeopleStates","chekedIDs","checkedKeys","processIDs","checkAll","processCheckAll","processTreeData","showList","isIndeterminate","indeterminateProcess","loading","oneCheck","hasData","childDataUrl","url","selectedPerson","showDialog","comp","fromUserList","selectedFromUser","secretaryID","managerIDList","processArrays","thirdData","props","id","children","checked","fullHeight","arrt","icon","isShow","isWorkProcess","processData","propsOrg","organizeName","activeOrganizeName","organizeList","processCategoryIDs","originatorPageIndex","originatorPageSize","originatorTotal","originatorLoading","isLoad","methods","burialPointEvent","event","burialPoint","loadMore","userId","user","vankeId","_this2","$axios","post","res","userAuthorityList","length","checkedIDs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","get_iterator_default","next","done","item","push","Number","processid","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_item","indexOf","setEditFrom","fromUserName","toUserName","fromUserID","replace","touserId","toUserID","tovalue","tovankeId","setChekedOften","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","it","selectTreeClick","selectTree","visible","IDs","i","getPrarentNode","reverse","join","pNode","parent","resolve","reject","companyTreeList","_orgID","_orgName","handleCheckChanges","indeterminate","splice","_i","getCheckedKeys","_this3","setTimeout","rightHeader","$el","getMore","handleCheckAllChange","val","handleCheckedProcessChange","checkedCount","showToggle","openDailog","type","userType","getTree","companytree","component","showDailog_mask","hideComponent","hiddenDailog_mask","showMsgfromchild","peoArr","_item2","_this4","userName","deptId","isWork","pageControllerInfo","totalRecordCount","displayName","adAccount","companyName","orgFullPath","orgNameFullPath","_i2","querySearchUser","querySearchUserPeo","removeUser","personChange","$set","personChangePeo","visibleChange","visibleChangePeo","setFormData","processNames","checkedAll","orgId","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_it","toUserIDs","toUserNames","status","currentTime","btnSave","getOftenIds","unique","editAuthor","addAuthor","warning","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","processName","concat","btnCancle","$router","path","removeProcessIDs","Child","processId","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_this5","messageList","message","Array","_this6","resultMessage","msg","_this7","stringify_default","startLoading","obj","isUse","isHide","isCategory","isDailog","childData","toTree","disabled","isUpgrade","success","endLoading","handleNodeExpand","isProcess","firstLoad","handleNodeClick","_i3","from_default","set_default","getProcessTree","_this8","dataSet","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","hasOwnProperty","deleteNode","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_it2","tree","append","childProcessIDs","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","j","processIds","getProcessId","count","_j","list","key","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","setCheckedAllNodes","setCheckedKeys","forEach","map","pid","_this9","getCheckedNodes","_i4","keys","arr","b","views_transferStyle","render","_vm","_h","$createElement","_c","_self","staticClass","style","height","staticStyle","cursor","attrs","tag","to","_v","justify","round","size","on","click","background","ref","model","label-width","font-size","margin","span","position","z-index","right","$event","filterable","clearable","remote","reserve-keyword","popper-class","remote-method","value-key","change","visible-change","nativeOn","callback","$$v","expression","_l","index","_s","directives","rawName","color","placeholder","border-bottom","padding","margin-top","float","domProps","textContent","class","font-weight","margin-right","title","_e","text-align","width","margin-left","highlight-current","node-key","default-expand-all","expand-on-click-node","empty-text","node-click","default-checked-keys","default-expanded-keys","show-checkbox","check-change","node-expand","check","sureSubmit","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/5.b2220a5e88bc1f9818bf.js","sourcesContent":["<template>\n  <div :style=\"{ 'height': bodyHeight + 'px'}\" class=\"authorized todoProcess\">\n    <el-container class=\"authorized-container\">\n      <el-header>\n        <div class=\"top-header\">\n          <span class=\"top-breadCrumb\">\n            <router-link tag=\"span\" style=\"cursor:pointer;\" class=\"authorized-breadCrumb\"\n                           :to=\"{ path: '/transferSetting' }\">\n                移交设置\n              </router-link>\n          </span>\n          <el-row type=\"flex\" class=\"searchCom searchAndReset\" justify=\"end\" >\n            <el-button round type=\"primary\"  @click=\"btnSave\" size=\"mini\">保存</el-button>\n            <el-button round type=\"primary\"  @click=\"btnCancle\" size=\"mini\">取消</el-button>\n          </el-row>\n        </div>\n      </el-header>\n\n      <!--移交新增-->\n      <el-container style=\"background: #ffffff;\">\n        <!-- 左侧 begin-->\n        <el-aside class=\"authorized-mainLeft authorized-mainLeft-padding\">\n          <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\n            <el-row style=\"font-size: 14px; margin: 10px 0;\">\n              <el-col :span=\"4\"><span>移交新增</span></el-col>\n            </el-row>\n            <el-row type=\"flex\" justify=\"start\">\n              <el-col :span=\"18\">\n                <el-form-item style=\"font-size: 16px;\" label=\"\" class=\"mainLeft-operatorer\">\n\n                </el-form-item>\n              </el-col>\n            </el-row>\n            <!-- 移交人 -->\n            <el-row type=\"flex\" justify=\"start\">\n              <el-col :span=\"18\">\n                <el-form-item label=\"移交人\" class=\"authorized-space\">\n                  <i style=\"position: absolute; z-index: 10; right: 10px;\" class=\"iconfont icon-member\"\n                     @click=\"openDailog('originator_dailog', 'auth')\"></i>\n                  <el-select\n                    v-model=\"userForm.authorUser[0]\"\n                    filterable\n                    clearable\n                    remote\n                    reserve-keyword\n                    popper-class=\"orgstates\"\n                    :remote-method=\"querySearchUserPeo\"\n                    value-key='userId'\n                    @change=\"personChangePeo\"\n                    @visible-change=\"visibleChangePeo\"\n                    :loading=\"loadingPerson\"\n                    ref=\"userIdPeo\"\n                    @click.native=\"burialPointEvent('移交设置-添加页面-移交人输入')\">\n                    <el-option\n                      v-for=\"(item,index) in orgPeopleStates\"\n                      :key=\"index\"\n                      :label=\"item.value\"\n                      :value=\"item\">\n                      <div class=\"userheight\">{{item.value}}({{item.userId}})</div>\n                      <div v-if=\"item.companyName\" class=\"fullpathsize\">{{ item.companyName }} {{item.orgFullPath}}</div>\n                      <div v-else class=\"fullpathsize\">{{item.orgFullPath}}</div>\n                    </el-option>\n                    <el-button :loading=\"originatorLoading\" class=\"load-more\" v-show=\"orgPeopleStates.length >= 10 && orgPeopleStates.length < originatorTotal\" @click=\"loadMore(searchValParam)\">\n                      点击加载更多\n                      <i class=\"el-icon-caret-bottom\" style=\"color: #119cff;\"></i>\n                    </el-button>\n                  </el-select>\n                </el-form-item>\n              </el-col>\n            </el-row>\n            <!-- 被移交人 -->\n            <el-row type=\"flex\">\n              <el-col :span=\"18\">\n                <el-form-item label=\"被移交人\" class=\"authorized-space\">\n                  <i style=\"position: absolute; z-index: 10; right: 10px;\" class=\"iconfont icon-member\"\n                     @click=\"openDailog('originator_dailog', 'beAuth')\"></i>\n                  <el-select\n                    v-model=\"userForm.authorizedUser[0]\"\n                    filterable\n                    clearable\n                    remote\n                    reserve-keyword\n                    popper-class=\"orgstates\"\n                    placeholder=\"\"\n                    :remote-method=\"querySearchUser\"\n                    value-key='userId'\n                    @change=\"personChange\"\n                    @visible-change=\"visibleChange\"\n                    :loading=\"loadingPerson\"\n                    ref=\"userId\"\n                    @click.native=\"burialPointEvent('移交设置-添加页面-被移交人输入')\">\n                    <el-option\n                      v-for=\"(item,index) in orgStates\"\n                      :key=\"index\"\n                      :label=\"item.value\"\n                      :value=\"item\">\n                      <div class=\"userheight\">{{item.value}}({{item.userId}})</div>\n                      <div v-if=\"item.companyName\" class=\"fullpathsize\">{{ item.companyName }} {{item.orgFullPath}}</div>\n                      <div v-else class=\"fullpathsize\">{{item.orgFullPath}}</div>\n                    </el-option>\n                    <el-button :loading=\"originatorLoading\" class=\"load-more\" v-show=\"orgStates.length >= 10 && orgStates.length < originatorTotal\" @click=\"loadMore(searchValParam)\">\n                      点击加载更多\n                      <i class=\"el-icon-caret-bottom\" style=\"color: #119cff;\"></i>\n                    </el-button>\n                  </el-select>\n                </el-form-item>\n              </el-col>\n            </el-row>\n            <!-- 流程描述 -->\n            <el-row>\n              <el-col :span=\"18\">\n                <el-form-item label=\"流程描述\" class=\"authorized-space\">\n                  <el-input type=\"textarea\" v-model=\"userForm.description\" @click.native=\"burialPointEvent('移交设置-添加页面-流程描述')\" style=\"height: auto;\"></el-input>\n                </el-form-item>\n              </el-col>\n            </el-row>\n            <!-- 操作人 -->\n            <el-row type=\"flex\" justify=\"start\">\n              <el-col :span=\"18\">\n                <el-form-item label=\"操作人\" class=\"mainLeft-operatorer\">\n                  <span>{{ userForm.operator }}</span>\n                </el-form-item>\n              </el-col>\n            </el-row>\n            <!-- 操作日期 -->\n            <el-row type=\"flex\" justify=\"start\">\n              <el-col :span=\"18\">\n                <el-form-item label=\"操作日期\" class=\"mainLeft-operatordate\">\n                  <span>{{userForm.operationDate}}</span>\n                </el-form-item>\n              </el-col>\n            </el-row>\n          </el-form>\n        </el-aside>\n        <!-- 左侧 end -->\n\n        <!-- 右侧 begin -->\n        <el-container class=\"authorized-mainRight\">\n          <el-header class=\"processHeader\" ref=\"rightHeader\" style=\"height: auto !important; border-bottom: 0;\">\n            <div class=\"hotProcess\">\n              <div class=\"hotProcess-title\">\n                <el-row style=\"padding: 10px 30px 10px 0;\">\n                  <el-col :span=\"9\">\n                    <span class=\"img-title\">经常审批的流程</span>\n                  </el-col>\n                  <el-col :span=\"14\" style=\"margin-top:-11px; float: right;\">\n                    <!-- 展开收起 -->\n                    <div @click=\"showToggle\" style=\"cursor: pointer; float: right;\">\n                      <span style=\"font-size: 14px;\" v-text=\"arrt\"></span>\n                      <i :class=\"icon\" style=\"color: #1fa0fb;font-weight: bolder;font-size: 18px\"></i>\n                    </div>\n                    <!-- 全选 -->\n                    <span style=\"margin-right: 15px; float: right;\">\n                      <el-checkbox :indeterminate=\"isIndeterminate\" v-model=\"checkAll\"\n                                   @change=\"handleCheckAllChange\">全选</el-checkbox>\n                    </span>\n                  </el-col>\n                </el-row>\n              </div>\n              <div>\n                <div v-show=\"showList\" class=\"hotProcess-container\">\n                  <div ref=\"ele\">\n                    <el-checkbox-group v-model=\"chekedIDs\" size=\"small\" @change=\"handleCheckedProcessChange\">\n                      <el-checkbox :title=\"item.processName\" v-for=\"(item, index) in processList\" :label=\"item\"\n                                   :key=\"index\">{{item.processName}}\n                      </el-checkbox>\n                    </el-checkbox-group>\n                    <div @click=\"getMore\" v-if='!loading&&hasData'>\n                      <el-button type=\"text\">点击加载更多</el-button>\n                    </div>\n                    <div style=\"text-align: center; margin: 15px 0;\" v-if='!hasData'>\n                      <span>无更多数据</span>\n                    </div>\n                  </div>\n                  <div class=\"loading-box\" v-if='loading'>\n                    <i class=\"el-icon-loading\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </el-header>\n          <el-main class=\"loadingtext\" style=\"height:100%; padding: 0; margin: 0;\">\n            <div class=\"compProcess\">\n              <div style=\"height: 100%;\">\n                <div class=\"compProcess-select\">\n                  <span>全部流程</span>\n                  <el-select style=\"width: 300px; margin-left: 15px;\" ref='selectTree' v-model=\"organizeName\"\n                             placeholder=\"请选择\" @click.native=\"burialPointEvent('移交测试-添加页面-组织选择')\">\n                    <el-option class=\"organize-list-box\" style=\"height: auto; padding: 0 !important;\" value=\"\" :disabled=true>\n                      <div style=\"height: 100%; width: 100%;\">\n                        <el-tree\n                          :data=\"organizeList\"\n                          :highlight-current=\"true\"\n                          node-key='orgID'\n                          default-expand-all\n                          :expand-on-click-node=false\n                          empty-text='暂无数据'\n                          :props=\"propsOrg\"\n                          @node-click=\"selectTreeClick\"\n                          ref=\"orgtree\"></el-tree>\n                      </div>\n                    </el-option>\n                  </el-select>\n                  <span style=\"margin-right: 30px; float: right;\">\n                    <el-checkbox :indeterminate=\"indeterminateProcess\" v-model=\"processCheckAll\" @change=\"setCheckedAllNodes\">全选</el-checkbox>\n                  </span>\n                </div>\n                <div class=\"mainRight-tree\" :style=\"showList ? { 'height': bodyHeight - headHeight - 150 + 'px' } : { 'height': bodyHeight - 200 + 'px' }\">\n                  <el-tree\n                    :highlight-current=\"true\"\n                    @check-change=\"handleCheckChanges\"\n                    :data=\"thirdData\"\n                    ref=\"tree\"\n                    node-key=\"id\"\n                    :default-checked-keys=\"checkedKeys\"\n                    :default-expanded-keys=\"categoryID\"\n                    show-checkbox\n                    :props=\"props\"\n                    @node-expand=\"handleNodeExpand\"\n                    @node-click=\"handleNodeClick\"\n                    @check=\"burialPointEvent('移交设置-添加页面-全部流程[单选]')\">\n                  </el-tree>\n                </div>\n              </div>\n            </div>\n          </el-main>\n        </el-container>\n        <!-- 右侧 end -->\n      </el-container>\n    </el-container>\n    <component :is=\"comp.component\" v-if=\"showDialog\" @hideComponent=\"hideComponent\"\n               v-on:sureSubmit=\"showMsgfromchild\" v-bind:childDataUrl=\"childDataUrl\" v-bind:queryName=\"queryName\"\n               v-bind:oneCheck=\"oneCheck\"></component>\n  </div>\n</template>\n\n<script>\n  import util from \"../../js/util\";\n  import orginatordialog from \"../dailog/originator_dailog.vue\";\n  import moment from \"moment\";\n  import loading from '../../plugins/loading/loading';\n  // `debounce` 是一个通过 Lodash 限制操作频率的函数。\n  import {debounce} from \"lodash\";\n  import { mapGetters } from 'vuex'\n\n  export default {\n    name: \"transferStyle\",\n    components: {\n      originator_dailog: orginatordialog,\n    },\n    computed: {\n      // 移交新增页面高度\n      bodyHeight() {\n        return document.documentElement.clientHeight;\n      },\n      ...mapGetters(['bodyHeight'])\n    },\n    created(param) {\n      let that = this;\n      that.debouncedSearchUser = debounce(that.getUsers, 0,param);\n      that.debouncedauthorizedUser = debounce(that.getUsers, 0,param);\n    },\n    //构造函数\n    mounted() {\n      let that = this;\n      //获取 常用流程\\全部流程 数据\n      Promise.all([that.getOftenProcess(), that.getOrganizeList()]).then(result => {\n        if(result[1].state){\n          let node = this.$refs.orgtree.getNode(result[1].orgID);\n          that.organize.orgID = result[1].orgID;\n          if(node){\n            this.$refs.orgtree.setCurrentKey(result[1].orgID);\n            this.setOrganize(node);\n            this.getChildenList(result[1].orgID, result[1].orgName);\n          }\n        }\n        if (this.params) {\n          //获取编辑查询的数据\n          this.initEditForm()\n        } else {\n          //新增初始表单数据\n          this.initAddForm()\n        }\n      }).catch(error => {\n        that.$message.error(error)\n      });\n    },\n\n    data() {\n      return {\n        searchValParam: {}, // 选人搜索内容\n        commonProcessIDs: [], // 常用流程选中的id\n        checkedNodeProcessIDs: [], // 每一级下的流程和文件夹 选中的id\n        categoryID: [], // 默认展开第一级\n        headHeight: '',\n        //编辑传过来的参数\n        params: this.$route.query.params,\n        // 当前页码\n        pageIndex: 1,\n        // 每页显示 条目数\n        pageSize: 12,\n        //常用流程 数据（默认显示12条）\n        processList: [],\n        //表单\n        userForm:{\n          //bind 选中的 授权人 单选\n          authorUser:[],\n          //bind 选中的 被授权人 单选\n          authorizedUser:[],\n          //bind 授权类型 默认 1\n          recType: 3,\n          //当前 登录人 名称\n          operator:util.getLocalStorage(\"username\"),\n          //当前日期\n          operationDate:moment(new Date()).format(\"YYYY-MM-DD\"),\n          //授权数据的 GUID号\n          lotNumber:'',\n          // 流程描述\n          description: ''\n        },\n        // 类型数据\n        recTypeList:[{value: 1,label: \"授权处理\"}, {value: 2, label: \"授权查看\"}],\n        form: {},\n        // 授权人 传给子组件的值\n        fromAuthorizingPerson: [],\n        // 被授权人 传给子组件的值\n        toAuthorizingPerson: [],\n        // 授权人被授权人搜索loading\n        loadingPerson: false,\n        // 判断是授权人还是发起人\n        authType: '',\n        //选人控件搜索条件\n        queryName: \"\",\n        //授权人  搜索数据\n        orgStates: [],\n        // 授权人  搜索数据\n        orgPeopleStates: [],\n        //选择的 常用流程id\n        chekedIDs: [],\n        //全部流程tree  默认勾选中的 key\n        checkedKeys:[],\n        //编辑数据 流程Id\n        processIDs:[],\n        checkAll: false, // 经常审批的流程 全选\n        processCheckAll: false,// 全部流程 全选\n        processTreeData: [], // 全选的数据 （没有toTree的）\n        showList: true, //列表展开收起的状态\n        isIndeterminate: false, // 常用流程全选的CheckBox的状态\n        indeterminateProcess: false, // 全部流程全选的CheckBox的状态\n        loading: false, // 经常使用流程loading\n        oneCheck: true,// 单选\n        hasData: true,// 无更多数据时显示\n        childDataUrl: {url: \"\", selectedPerson: []}, //传给子组件的值\n        showDialog: false, //弹窗\n        comp: {},\n        fromUserList: [], //授权人列表\n        selectedFromUser: {secretaryID: '', managerIDList: ''},//被选中的授权人\n        processArrays: [],//保存所有流程\n        thirdData: [],\n        props: {\n          id: \"id\",\n          label: \"name\",\n          children: \"Child\"\n        },\n        checked: false,\n        fullHeight: document.documentElement.clientHeight,\n        arrt: \"收起\",\n        icon: \"el-icon-arrow-up\",\n        isShow: true,\n        isWorkProcess: [], // 全选后的所有数据\n        processData: [], // 全部流程全选\n        //组织 下拉tree\n        propsOrg: {\n          label: 'orgName',\n          value: 'orgID',\n          children: 'm_ChildOrg'\n        },\n        organizeName: '',//下拉框显示值\n        activeOrganizeName: [],//当前选中的组织名称\n        organizeList: [],//组织数据\n        //当前选中的组织\n        organize:{orgID:''},\n        processCategoryIDs: [], // 选中的所有文件夹id\n        originatorPageIndex: 0,\n        originatorPageSize: 10,\n        originatorTotal: 0,\n        originatorLoading: false,\n        isLoad: true\n      };\n    },\n    methods: {\n      /**\n      * 埋点事件\n      */\n      burialPointEvent(event){\n        util.burialPoint(event);\n      },\n      // 加载更多\n      loadMore(param) {\n        this.originatorPageIndex ++;\n        this.getUsers(param, true);\n      },\n      // 初始化 新增表单数据\n      initAddForm(){\n        //新增设置当前登录人为默认 授权人\n        let userId = util.getLocalStorage(\"loginname\")\n        let value = util.getLocalStorage(\"username\")||util.getLocalStorage(\"loginname\")\n        let vankeId = `vanke\\\\${userId}`\n        let user = {userId,value,vankeId}\n        this.userForm.authorUser[0] = value\n        this.fromAuthorizingPerson[0] = user\n        this.userForm.operator = value\n      },\n      // 初始化 编辑表单数据\n      initEditForm(){\n        let that = this\n        if (!that.params.lotNumber) {\n          return;\n        }\n        that.$axios.post(\"/api/getUserAuthorityToEdit\", {lotNumber: this.params.lotNumber}).then(res => {\n          if(res.data.userAuthorityList.length >0){\n            let checkedIDs = [];\n            for (let item of this.processList) {\n              checkedIDs.push(Number(item.processid));\n            }\n            for (let item of res.data.userAuthorityList[0].processIDs) {\n              if (checkedIDs.indexOf(item) === -1) {\n                this.processArrays.push({\n                  id: item\n                })\n              }\n            }\n            that.setEditFrom(res.data.userAuthorityList[0])\n          }\n        });\n      },\n      // 设置 编辑表单数据\n      setEditFrom(data){\n        this.userForm = {\n          //bind 选中的 授权人 单选\n          authorUser:[data.fromUserName],\n          //bind 选中的 被授权人 单选\n          authorizedUser:[data.toUserName],\n          //bind 移交类型 默认 3\n          recType: data.recType,\n          //当前 登录人 名称\n          operator:util.getLocalStorage(\"username\"),\n          //当前日期\n          operationDate:moment(new Date()).format(\"YYYY-MM-DD\"),\n          //授权数据的 GUID号\n          lotNumber:data.lotNumber,\n          // 流程描述\n          description: data.description\n        }\n        //设置授权人  回填数据\n        let userId = data.fromUserID.replace('VANKE\\\\', '');\n        let value = data.fromUserName;\n        let vankeId = data.fromUserID;\n        this.userForm.authorUser[0] = value;\n        this.fromAuthorizingPerson[0] = {userId,value,vankeId};\n        //设置被授权人回填数据\n        let touserId = data.toUserID.replace('VANKE\\\\', '');\n        let tovalue = data.toUserName;\n        let tovankeId = data.toUserID;\n        this.userForm.authorizedUser[0] = data.toUserName;\n        this.toAuthorizingPerson[0] =  {'userId':touserId,'value':tovalue,'vankeId':tovankeId};\n\n        //设置 编辑数据 流程Id\n        this.processIDs = data.processIDs;\n        // 设置常用流程选中-状态\n        this.setChekedOften()\n      },\n      // 设置常用流程选中-状态\n      setChekedOften(){\n        let that = this;\n        //判断表单类型  新增|编辑\n        if(that.params && that.processIDs){\n          //编辑 表单设置  常用流程 选中状态\n          for (let it of that.processList) {\n            if (that.processIDs.indexOf(Number(it.processid))>-1) {\n              that.chekedIDs.push(it);\n            }\n          }\n        }\n        if (that.chekedIDs.length === that.processList.length && that.chekedIDs.length > 0) {\n          that.checkAll = true;\n        } else if (that.chekedIDs.length < that.processList.length && that.chekedIDs.length > 0) {\n          that.isIndeterminate = true\n        }\n      },\n\n      //点击下拉框的树\n      selectTreeClick(data, node) {\n        this.$refs.selectTree.visible = false;\n        this.organize = data;\n        this.setOrganize(node);\n        //获取 流程数据\n        this.getChildenList(data.orgID, data.orgName);\n        //切换下拉框的树 保持文件夹选中状态\n        let IDs = [];\n        for (let i = 0; i < this.processCategoryIDs.length; i++) {\n          this.checkedKeys.push(this.processCategoryIDs[i].id);\n          if (this.checkedKeys.indexOf(this.processCategoryIDs[i].id) > -1) {\n            IDs.push(this.processCategoryIDs[i].id)\n          }\n        }\n        this.checkedKeys = IDs;\n      },\n      //设置 下拉 选中 数据\n      setOrganize(node) {\n        this.activeOrganizeName = [];\n        this.getPrarentNode(node); // 保存路径\n        this.organizeName = this.activeOrganizeName.reverse().join('/');\n      },\n      //获取所有上级节点\n      getPrarentNode(pNode) {\n        if (pNode.data.orgName != undefined) {\n          this.activeOrganizeName.push(pNode.data.orgName);\n        }\n        if (pNode.parent != undefined) {\n          this.getPrarentNode(pNode.parent);\n        }\n      },\n      // 获取组织数据\n      getOrganizeList() {\n        let that = this;\n        return new Promise((resolve, reject) => {\n          that.$axios.post(\"/api/companytree/page\", {}).then(res => {\n            if (res.data.companyTreeList.length > 0) {\n              that.organizeList = res.data.companyTreeList;\n              let orgID = that.organizeList[0].orgID;\n              let orgName = that.organizeList[0].orgName;\n              resolve({state: true, orgID, orgName});\n            } else {\n              resolve({state: false, orgID, orgName});\n            }\n          }).catch(err => {\n            reject(`获取组织数据失败!ERROR MESSAGE:${err}`)\n          })\n        })\n      },\n      // tree选中状态发生变化时的回调\n      handleCheckChanges(data, checked, indeterminate) {\n        if (!checked) {\n          // 文件夹不选中后 删除当前第i个数据\n          for (let i = 0; i < this.processCategoryIDs.length; i++) {\n            if (data.id === this.processCategoryIDs[i].id) {\n              this.processCategoryIDs.splice(i, 1);\n              i--;\n            }\n          }\n          // 流程不选中后 删除当前第i个数据\n          for (let i = 0; i < this.processArrays.length; i++) {\n            if (data.id === this.processArrays[i].id) {\n              this.processArrays.splice(i, 1);\n              i--;\n            }\n          }\n        }\n        this.getCheckedKeys(data, checked);\n        // this.changeCheckedProcess(data, checked);\n      },\n      // changeCheckedProcess(val, bool){\n      //   // 与常用流程同步\n      //   if (bool) {\n      //     for (let item of this.processList) {\n      //       if (val.processId == item.processid) {\n      //         this.chekedIDs.push(item)\n      //       }\n      //     }\n      //   }else {\n      //     for (let item in this.chekedIDs) {\n      //       if (val.processId == this.chekedIDs[item].processid) {\n      //         this.chekedIDs.splice(item, 1);\n      //       }\n      //     }\n      //   }\n      // },\n      //获取经常使用的流程\n      getOftenProcess() {\n        let that = this;\n        return new Promise((resolve, reject) => {\n          let url =`/api/oftenApproved?pageIndex=${that.pageIndex - 1}&pageSize=${that.pageSize}`;\n          that.$axios.post(url, {}).then(result => {\n            that.processList = result.data.result;\n            //设置  点击加载更多  显示/隐藏\n            if (result.data.result.length <= 12) {\n              this.hasData = false;\n            }\n            that.setChekedOften();\n            setTimeout( () => {\n              this.headHeight = this.$refs.rightHeader.$el.clientHeight;\n            }, 1000);\n            resolve(true)\n          }).catch(err => {\n            reject(`查询列表数据失败!ERROR MESSAGE:${err}`);\n          });\n        })\n      },\n      //点击加载更多\n      getMore() {\n        this.pageIndex = this.pageIndex + 1;\n        this.getOftenProcess();\n      },\n      //经常审批的流程---全选\n      handleCheckAllChange(val) {\n        util.burialPoint('移交设置-添加页面-经常审批流程[全选]');\n        if (val) {\n          this.chekedIDs = this.processList;\n          // let checkedKeys = [];\n          // for (let item of this.chekedIDs) {\n          //   checkedKeys.push(Number(item.processid));\n          // }\n          // this.$refs.tree.setCheckedKeys(checkedKeys);\n        } else {\n          this.chekedIDs = [];\n          // this.$refs.tree.setCheckedKeys([]);\n        }\n        this.isIndeterminate = false;\n      },\n      // 经常使用的流程全选中后  全选选中\n      handleCheckedProcessChange(value) {\n        util.burialPoint('移动设置-添加页面-经常审批流程[单选]');\n        // let checkedKeys = [];\n        let checkedCount = value.length;\n        this.checkAll = checkedCount === this.processList.length;\n        this.isIndeterminate =\n          checkedCount > 0 && checkedCount < this.processList.length;\n        // for (let item of value) {\n        //   checkedKeys.push(Number(item.processid));\n        // }\n        // this.$refs.tree.setCheckedKeys(checkedKeys);\n      },\n      // 是否展开\n      showToggle() {\n        this.showList = !this.showList;\n        this.isShow = !this.isShow;\n        if (this.isShow) {\n          this.arrt = \"收起\";\n          this.icon = \"el-icon-arrow-up\";\n        } else {\n          this.arrt = \"展开\";\n          this.icon = \"el-icon-arrow-down\";\n        }\n      },\n      // 打开弹出框组件\n      openDailog(type, userType) {\n        // 弹出框类型\n        if (type == 'originator_dailog') {//发起人\n          this.authType = userType;\n          this.oneCheck = true;\n          this.childDataUrl.getTree = \"getTree\";\n          this.childDataUrl.companytree = \"companytree/page\";\n          if (userType == 'auth') {\n            util.burialPoint('移交设置-添加页面-移交人输入');\n            // 移交人\n            this.childDataUrl.selectedPerson = this.fromAuthorizingPerson;\n          } else if (userType == 'beAuth') {\n            util.burialPoint('移交设置-添加页面-被移交人输入');\n            // 被移交人\n            this.childDataUrl.selectedPerson = this.toAuthorizingPerson;\n          }\n        }\n        this.comp.component = type;\n        this.showDialog = true;\n        util.showDailog_mask(); //解决ie浏览器问题显示遮罩\n      },\n      // 关闭弹出框组件\n      hideComponent() {\n        this.showDialog = false;\n        util.hiddenDailog_mask(); //解决ie浏览器问题 隐藏遮罩\n      },\n      // 弹窗组件带出数据赋值给主组件\n      showMsgfromchild(data) {\n        let that = this;\n        if (that.authType == 'auth') {// 移交人\n          if(data.peoArr && data.peoArr.length >0){\n            let item = data.peoArr[0];\n            this.userForm.authorUser = [item.name];\n            this.fromAuthorizingPerson = [{\n              userId: item.userId,\n              value: item.name,\n              vankeId:  item.vankeId\n            }]\n          }else{\n            this.userForm.authorUser = [];\n            this.fromAuthorizingPerson = []\n          }\n        } else if (that.authType == 'beAuth') { // 被移交人\n          if(data.peoArr && data.peoArr.length >0){\n            let item = data.peoArr[0]\n            this.userForm.authorizedUser = [item.name]\n            this.toAuthorizingPerson = [{\n              userId: item.userId,\n              value: item.name,\n              vankeId:  item.vankeId\n            }]\n          }else{\n            this.userForm.authorizedUser = []\n            this.toAuthorizingPerson = []\n          }\n        }\n        this.hideComponent();\n      },\n      // 获取所有人员\n      getUsers(param, type) {\n        let that = this;\n        that.loadingPerson = true;\n        that.originatorLoading = true;\n        if(type){\n          that.loadingPerson = false;\n        }\n        that.$axios.post(`/api/getUser?pageIndex=${this.originatorPageIndex}&pageSize=${this.originatorPageSize}`, {name: param.userName, deptId: \"\", isWork: \"1\"}).then(result => {\n          that.orgPeopleStates = [];\n          that.orgStates = [];\n          this.originatorTotal = result.data.pageControllerInfo.totalRecordCount;\n          if(param.type == 'authorUser'){\n            //授权人\n            for (let i = 0; i < result.data.result.length; i++) {\n              that.orgPeopleStates.push({\n                value: result.data.result[i].displayName,\n                userId: result.data.result[i].adAccount,\n                companyName: result.data.result[i].companyName,\n                orgFullPath: result.data.result[i].orgNameFullPath,\n                'vankeId': result.data.result[i].vankeId\n              });\n            }\n          }else{\n            //被授权人\n            for (let i = 0; i < result.data.result.length; i++) {\n              that.orgStates.push({\n                value: result.data.result[i].displayName,\n                userId: result.data.result[i].adAccount,\n                companyName: result.data.result[i].companyName,\n                orgFullPath: result.data.result[i].orgNameFullPath,\n                'vankeId': result.data.result[i].vankeId\n              });\n            }\n          }\n          that.loadingPerson = false;\n          that.originatorLoading = false;\n        }).catch(err => {\n          that.loadingPerson = false;\n          that.originatorLoading = false;\n          that.$message.error(`查询列表数据失败!ERROR MESSAGE:${err}`);\n        });\n      },\n      // 被移交人模糊搜索\n      querySearchUser(userName) {\n        this.orgStates = [];\n        this.searchValParam.userName = userName;\n        this.searchValParam.type = \"authorizedUser\";\n        this.debouncedauthorizedUser({userName,type:\"authorizedUser\"});\n      },\n      // 移交人模糊搜索\n      querySearchUserPeo(userName) {\n        this.orgPeopleStates = [];\n        this.searchValParam.userName = userName;\n        this.searchValParam.type = \"authorUser\";\n        this.debouncedSearchUser({userName,type:\"authorUser\"});\n      },\n      //删除被移交人\n      removeUser(data) {\n        if (data.userId) {\n          for (var it = 0; it < this.toAuthorizingPerson.length; it++) {\n            if (data.userId == this.toAuthorizingPerson[it].userId) {\n              break;\n            }\n          }\n          this.toAuthorizingPerson.splice(it, 1);\n        } else {\n          for (var it = 0; it < this.toAuthorizingPerson.length; it++) {\n            if (data == this.toAuthorizingPerson[it].value) {\n              break;\n            }\n          }\n          this.toAuthorizingPerson.splice(it, 1);\n        }\n      },\n      // 选择被移交人员\n      personChange(data) {\n        this.$set(this.$refs.userId, 'query', '');//选中后清空输入的文本\n        if (data) {\n          this.toAuthorizingPerson = [data];\n        } else {\n          this.toAuthorizingPerson = [];\n        }\n      },\n      // 选择移交人员\n      personChangePeo(data) {\n        this.$set(this.$refs.userId, 'query', '');//选中后清空输入的文本\n        if (data) {\n          this.fromAuthorizingPerson = [data];\n        } else {\n          this.fromAuthorizingPerson = [];\n        }\n      },\n      // 被移交人下拉隐藏时候隐藏验证提示\n      visibleChange(val) {\n        this.orgStates = []; //清空被移交人下拉数据\n      },\n      //移交人下拉隐藏时候隐藏验证提示\n      visibleChangePeo(val) {\n        this.orgPeopleStates = []; //清空移交人下拉数据\n      },\n      //设置 提交表单数据\n      setFormData(){\n        let processIDs = [];\n        let processNames = [];\n        let processCategoryIDs = [];\n        let checkedAll = '';\n        let orgId = [];\n        for (let it of this.processArrays) {\n          processIDs.push(it.id); // 流程ID赋值\n          processNames.push(it.name); // 流程name赋值\n        }\n        for (let it of this.processCategoryIDs) {\n          processCategoryIDs.push(it.id); // 流程ID赋值\n        }\n        if (this.processCheckAll) {\n          checkedAll = '0';\n          for (let i = 0; i < this.processArrays.length; i++) {\n            if(typeof this.processArrays[i].id === \"string\"){\n              orgId.push(this.processArrays[i].id);\n            }\n          }\n          processNames = [];\n          processIDs = [];\n          processCategoryIDs = [];\n        }\n        return {\n          fromUserID: `VANKE\\\\${this.fromAuthorizingPerson[0].userId}`,    //授权人 Id\n          fromUserName: this.fromAuthorizingPerson[0].value,   //授权人 名称\n          toUserIDs:  `VANKE\\\\${this.toAuthorizingPerson[0].userId}`,    //被授权人 Id\n          toUserNames: this.toAuthorizingPerson[0].value,   //被授权人 名称\n          processNames: processNames,  //流程 名称 集合\n          processIDs: processIDs,    //流程 ID 集合\n          recType: this.userForm.recType,        //授权类型 默认 1\n          lotNumber: \"\",     //授权数据的 GUID号\n          status: \"0\",       //状态 0-Active 1-Canceled 2-Expired\n          userId: util.getLocalStorage(\"loginname\"),        //当前登录人 Id\n          operator: this.userForm.operator,      //操作人 名称\n          operationDate: this.userForm.operationDate, //操作时间\n          currentTime: moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\"),   //当前时间\n          description: this.userForm.description,   //描述\n          checkedAll: checkedAll,\n          orgId: orgId.join(','),\n          processCategoryIDs: processCategoryIDs.join(',')\n        }\n      },\n      //保存按钮\n      btnSave() {\n        util.burialPoint('移交设置-添加页面-保存');\n        // this.processArrays = [];\n        this.getOftenIds(); // 获取常用流程选中的id\n        // this.getCheckedKeys(); // 选中的流程节点\n        this.processArrays = this.unique(this.processArrays, 'id'); // 去除重复流程\n        this.processCategoryIDs = this.unique(this.processCategoryIDs, 'id'); // 去除重复文件夹\n        //校验输入数据\n        //手动 设置下拉框选中值时 下拉框 v-model 无法获取\n        if (!this.fromAuthorizingPerson || this.fromAuthorizingPerson.length ==0) {\n          this.$message.warning(\"请选择移交人！\");\n          return;\n        }\n        if (!this.toAuthorizingPerson || this.toAuthorizingPerson.length ==0) {\n          this.$message.warning(\"请选择被移交人！\");\n          return;\n        }\n        if (this.processArrays.length === 0 && this.processCategoryIDs.length === 0) {\n          this.$message.warning(\"请选择移交流程！\");\n          return;\n        }\n        let form = this.setFormData();\n        //判断是新增还是编辑\n        if (this.params) {\n          form.lotNumber = this.params.lotNumber;\n          // 编辑\n          this.editAuthor(form);\n        } else {\n          // 新增\n          this.addAuthor(form);\n        }\n      },\n      //获取常用流程选中的流程id\n      getOftenIds() {\n        this.commonProcessIDs = [];\n        if (this.chekedIDs.length > 0) {\n          for (let item of this.chekedIDs) {\n            this.commonProcessIDs.push({'id': Number(item.processid), 'name': item.processName});\n          }\n        }\n        this.processArrays = this.processArrays.concat(this.commonProcessIDs);\n      },\n      //取消\n      btnCancle() {\n        this.$router.push({path: \"/transferSetting\"});\n      },\n      // 判断选择文件夹后不选流程\n      removeProcessIDs(data, checked) {\n        if (checked && data.Child && data.processId === null) {\n          let processIDs = [];\n          for (let item of data.Child) {\n            processIDs.push(item.id)\n          }\n          for (let i = 0; i < this.processArrays.length; i++) {\n            if (processIDs.indexOf(this.processArrays[i].id) > -1) {\n              this.processArrays.splice(i, 1);\n              i--;\n            }\n          }\n        }\n      },\n      //新增保存用户移交\n      addAuthor(form) {\n        this.$axios.post(\"/api/UserAuthority\", form).then(res => {\n          if (res.data.result == 0) {\n            this.$message.warning(res.data.messageList[0].message);\n            return;\n          } else if (res.data.messageList.length > 0) {\n            this.$message.warning(res.data.messageList[0].message);\n            return;\n          } else {\n            this.$message({\n              type: \"success\",\n              message: \"保存成功!\"\n            });\n            this.$router.push({path: \"/transferSetting\"});\n          }\n        }).catch(err => {\n            this.$message.error(`查询列表数据失败!ERROR MESSAGE:${err}`);\n          });\n        this.processArrays = new Array();\n      },\n      //编辑保存用户移交\n      editAuthor(form) {\n        this.$axios\n          .post(\"/api/getUserAuthorityToUpdate\", form)\n          .then(res => {\n            let result = res.data.result;\n            if (result) {\n              if (res.data.resultMessage != '') {\n                this.$message.warning(res.data.resultMessage);\n              } else {\n                this.$message({\n                  type: \"success\",\n                  message: \"保存成功!\"\n                });\n                this.$router.push({path: \"/transferSetting\"});\n              }\n            } else {\n              let msg = res.data.messageList[0].message;\n              this.$message.warning(msg);\n            }\n          })\n          .catch(err => {\n            this.$message.error(`查询列表数据失败!ERROR MESSAGE:${err}`);\n          });\n        this.processArrays = new Array();\n      },\n      //获取二级菜单 流程数据\n      getChildenList(orgID, orgName) {\n        this.categoryID = [orgID];\n        this.isWorkProcess = [];\n        this.processCheckAll = JSON.stringify(this.unique(this.processArrays, 'id')).indexOf(orgID) > -1;\n        loading.startLoading();\n        var obj = {\n          orgId: orgID,\n          isUse: \"1\",\n          name: \"\",\n          isHide: \"1\",\n          isCategory: \"\",\n          isDailog: \"0\"\n        };\n        var url = \"/api/processCategory\";\n        this.$axios.post(url, obj).then(res => {\n            if (res.status === 200) {\n              let childData = this.toTree(res.data.result);\n              let data = [];\n              data.push({\n                'id': orgID,\n                \"Child\": childData,\n                \"name\": orgName,\n                'disabled' : false,\n                'isUpgrade': '0'\n              });\n              this.thirdData = data;\n              if (this.thirdData.length == null) {\n                this.$message.success(\"数据为空\");\n              }\n            } else {\n              this.$message.error(\"请求失败！\");\n            }\n            loading.endLoading();\n          })\n          .catch(err => {\n            this.$message.error(`child连接服务器失败！${err}`);\n            loading.endLoading();\n          });\n      },\n      // +\n      handleNodeExpand(data,node){\n        if (data.isUpgrade === '0') { return; } // 根节点不发请求\n        if (data.processId !== null) { return; } // 文件不发请求\n        // isLoad = true 加载数据  如果没有Child 点击加载数据\n        if(!data.Child || data.Child.length == 0){this.isLoad = true;}\n        // isProcess 判断只加载一次  加载完之后 isLoad = false\n        if (!data.isProcess) {\n          this.firstLoad(data,node);\n          this.isLoad = false;\n        }\n      },\n      // 加载 流程\n      handleNodeClick(data,node) {\n        if (data.isUpgrade === '0') { return; } // 根节点不发请求\n        if (data.processId !== null) { return; } // 文件不发请求\n        // isLoad = true 加载数据  如果没有Child 点击加载数据\n        if(!data.Child || data.Child.length == 0){this.isLoad = true;}\n        // isProcess 判断只加载一次  点节点先触发+号，在+里面 isLoad = false 不进入下面判断\n        if (this.isLoad && !data.isProcess) {\n          this.firstLoad(data,node);\n        }\n      },\n      // 第一次加载\n      firstLoad(data,node){\n        // 切换目录保持流程选中状态不变\n        for (let i = 0; i < this.processArrays.length; i++) {\n          this.checkedKeys.push(this.processArrays[i].id);\n        }\n        for (let i = 0; i < this.checkedKeys.length; i++) {\n          if(!node.checked) {\n            this.checkedKeys.splice(i, 1);\n            i--;\n          }\n        }\n        this.checkedKeys = Array.from(new Set(this.checkedKeys));\n        // this.clearProcess(data,node);\n        // 判断只发送一次请求\n        if(!data.isProcess){\n          this.categoryID = [];\n          this.categoryID.push(data.id);\n          this.getProcessTree(data,node);\n        }\n      },\n      getProcessTree(data,node) {\n        loading.startLoading();\n        this.isWorkProcess = [];// 清空具体流程数据\n        let obj = {\n          id: data.id,  // 组织id\n          orgId: this.organize.orgID,\n          isUse: \"1\", // 首页\n          name: \"\",   // 搜索的值\n          isHide: \"1\", // 搜索的值\n          isCategory: \"0\",// 点根节点传 1  其余节点传0\n          isDailog: \"0\"\n        };\n        let url = \"/api/processCategoryTree\";\n        this.$axios.post(url, obj).then(res => {\n          if (res.status === 200) {\n            data.isProcess = true;\n            let dataSet = res.data.result;\n            this.processData = dataSet;\n            for (let it of dataSet) {\n              if (it && it.hasOwnProperty('processId') && it.processId !== null && it.processId !== '0' && it.isUpgrade !== '0') {\n                this.processTreeData.push(it);\n              }\n            }\n            dataSet = this.deleteNode(dataSet);\n            for (let it of dataSet) {\n              if (it && it.hasOwnProperty('processId') && it.processId !== null && it.processId !== '0') {\n                this.isWorkProcess.push(it);\n                //获取 到具体流程数据 processList\n                this.$refs.tree.append(it, node);\n              }\n            }\n            //设置 全部流程选中\n            if(this.params){\n              this.checkedIDs();\n            } else {\n              // 切换下拉树和目录 保持流程的选中状态\n              let IDs = [];\n              for (let i = 0; i < this.processArrays.length; i++) {\n                this.checkedKeys.push(this.processArrays[i].id);\n                if (this.checkedKeys.indexOf(this.processArrays[i].id) > -1) {\n                  IDs.push(this.processArrays[i].id)\n                }\n              }\n              this.checkedKeys = IDs;\n            }\n            // 文件夹选中后 展开后的流程默认选中状态\n            if(node.checked) {\n              let childProcessIDs = [];\n              for (let item of data.Child) {\n                childProcessIDs.push(item.id)\n              }\n              setTimeout( () => {\n                this.checkedKeys = childProcessIDs\n              }, 10)\n            }\n          } else {\n            this.$message.error(\"请求失败！\");\n          }\n          loading.endLoading();\n        }).catch(err => {\n          this.$message.error(`child连接服务器失败！${err}`);\n          loading.endLoading();\n        });\n      },\n      checkedIDs(){\n        let checkedIDs = [];\n        let that = this;\n        for (let j in that.processIDs) {\n          checkedIDs.push(this.processIDs[j]+'');\n        }\n        let processIds = this.getProcessId(that.processList,'processid')\n        let count = checkedIDs.length;\n        for (let j=0;j<count;j++) {\n          if (processIds.indexOf(checkedIDs[j])>=0) {\n            checkedIDs.splice(j, 1);\n            j--\n          }\n        }\n        this.checkedKeys = checkedIDs;\n      },\n      getProcessId(list,key){\n        let data = []\n        for(let it of list){\n          if(it[key]){ data.push(it[key]+'')}\n        }\n        return data\n      },\n      // 全部流程全选\n      setCheckedAllNodes() {\n        util.burialPoint('移交设置-添加页面-全部流程[全选]');\n        this.processData = [];\n        if (this.processCheckAll) {\n          // for (let it of this.processTreeData) {\n          //   if (it && it.hasOwnProperty('processId') && it.processId !== null && it.processId !== '0') {\n          //     this.processData.push(it);\n          //   }\n          // }\n          this.$refs.tree.setCheckedKeys([this.organize.orgID]);\n        } else {\n          this.$refs.tree.setCheckedKeys([]);\n        }\n      },\n      toTree(data) {\n        if (data == null || data.length == 0) return [];\n        data.forEach(function (item) {\n          delete item.Child;\n        });\n\n        var map = {};\n        data.forEach(function (item) {\n          map[item.id] = item;\n        });\n\n        var val = [];\n        data.forEach(function (item) {\n          var parent = map[item.pid];\n          if (parent) {\n            (parent.Child || (parent.Child = [])).push(item);\n          } else {\n            val.push(item);\n          }\n        });\n        return val;\n      },\n      //设置 流程节点可选择\n      /*disabledNode(data) {\n        let nodeData = [];\n        for (let it of data) {\n          if (it) {\n            if (it.hasOwnProperty(\"processId\") && (it.processId == null || it.processId == '0')) {\n              it.disabled = true;\n            }\n            nodeData.push(it);\n          }\n        }\n        return nodeData;\n      },*/\n      //遍历数组，去掉不能选择的流程节点（isUpgrade=0）\n      deleteNode(data) {\n        for (let i in data) {\n          if (data[i].isUpgrade == \"0\") {\n            delete data[i];\n          }\n        }\n        return data;\n      },\n      //获取选中节点\n      getCheckedKeys(data, checked) {\n        let list = this.$refs.tree.getCheckedNodes();\n        // 判断文件夹\n        for (let i = 0; i < list.length; i++) {\n          if (list.length > 0 && list[i].processId === null) {\n            this.processCategoryIDs.push({\n              \"id\": list[i].id,\n              \"name\": list[i].name\n            })\n          }\n        }\n        // 判断流程\n        for (let i = 0; i < list.length; i++) {\n          if (list.length > 0 && list[i].processId !== null) {\n            this.processArrays.push({\n              \"id\": list[i].id,\n              \"name\": list[i].name\n            })\n          }\n        }\n        // 合并全部流程和常用流程\n        this.processArrays = this.processArrays.concat(this.commonProcessIDs);\n        // 判断全选的选中状态\n        let keys = this.$refs.tree.getCheckedKeys();\n        if (keys[0] === this.organize.orgID) {\n          this.processCheckAll = true;\n          this.indeterminateProcess = false;\n        } else if (keys.length === 0) {\n          this.processCheckAll = false;\n          this.indeterminateProcess = false;\n        } else {\n          this.processCheckAll = false;\n          this.indeterminateProcess = true;\n        }\n        // 判断选择文件夹后不选流程\n        setTimeout( () => {\n          this.removeProcessIDs(data, checked);\n        }, 100)\n      },\n      //数组除重复\n      unique(list, key) {\n        var arr = [];\n        for (var i = 0; i < list.length; i++) {\n          if (i == 0) {\n            arr.push(list[i]);\n          }\n          let b = false;\n          if (arr.length > 0 && i > 0) {\n            for (var j = 0; j < arr.length; j++) {\n              if (arr[j][key] == list[i][key]) {\n                b = true;\n              }\n            }\n            if (!b) {\n              arr.push(list[i]);\n            }\n          }\n        }\n        return arr;\n      },\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .el-breadcrumb__inner a,\n  .el-breadcrumb__inner.is-link {\n    color: #1fa0fd;\n  }\n\n  .icon-red-style {\n    i {\n      color: #f56c6c;\n    }\n    span {\n      font-size: 14px;\n      color: #f56c6c;\n    }\n  }\n\n  .custom-tree-node {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 12px;\n    padding-right: 8px;\n  }\n\n  .derr {\n    color: #23a6fe;\n  }\n\n  .authorized {\n      height: 100%;\n    .searchAndReset {\n      .el-button.el-button--mini {\n        border-radius: 15px;\n        padding: 5px 20px;\n        i.el-icon-circle-close-outline, i.el-icon-circle-check-outline {\n          display: none;\n        }\n      }\n      .el-button--mini:nth-of-type(1) {\n        border: none;\n      }\n      .el-button--mini:nth-of-type(2) {\n        border: 1px solid #ee524e;\n        background: #ffffff;\n        color: #ee524e;\n        margin-left: 10px;\n      }\n      .el-button--mini:nth-of-type(1):hover {\n        background: -webkit-linear-gradient(left, #3dd7fe, #3195f8); /* Safari 5.1 - 6.0 */\n        background: -o-linear-gradient(right, #3dd7fe, #3195f8); /* Opera 11.1 - 12.0 */\n        background: -moz-linear-gradient(right, #3dd7fe, #3195f8); /* Firefox 3.6 - 15 */\n        background: linear-gradient(to right, #3dd7fe, #3195f8); /* 标准的语法 */\n        color: #ffffff;\n        border: none;\n      }\n      .el-button--mini:nth-of-type(2):hover {\n        background: -webkit-linear-gradient(left, #fb8730, #ee524e); /* Safari 5.1 - 6.0 */\n        background: -o-linear-gradient(right, #fb8730, #ee524e); /* Opera 11.1 - 12.0 */\n        background: -moz-linear-gradient(right, #fb8730, #ee524e); /* Firefox 3.6 - 15 */\n        background: linear-gradient(to right, #fb8730, #ee524e); /* 标准的语法 */\n        color: #ffffff;\n        border: 1px solid #ee524e;\n      }\n    }\n\n    .el-date-editor.el-range-editor.el-input__inner.el-date-editor--daterange {\n      width: 100%;\n    }\n\n    .authorized-container {\n      position: relative;\n      height: 100%;\n      .top-header {\n        .authorized-breadCrumb:hover {\n          color: #1FA0FC;\n        }\n      }\n      .img-title {\n        height: 16px;\n        line-height: 12px;\n        padding-left: 15px;\n        cursor: pointer;\n        font-size: 14px;\n        margin-bottom: 15px;\n        margin-left: -12px;\n        float: left;\n        padding-top: 5px;\n      }\n    }\n    .processHeader {\n      background-color: #ffffff;\n      color: #333;\n      padding: 0 !important;\n      margin: 0;\n      border-radius: 10px;\n    }\n    .el-header {\n      padding: 10px 10px 10px 10px;\n      color: #333;\n\n      .hotProcess {\n        background: #ffffff;\n        border-radius: 8px;\n        .hotProcess-title {\n          position: relative;\n          text-align: left;\n          height: 40px;\n          line-height: 40px;\n          font-size: 16px;\n          padding-left: 30px;\n          background: #F8F9FB;\n          .el-row {\n            background: #F8F9FB;\n            padding: 10px 0 10px 0;\n          }\n        }\n        .hotProcess-title:before {\n          content: '';\n          width: 4px;\n          height: 15px;\n          display: inline-block;\n          background: #1FA0FC;\n          position: absolute;\n          left: 20px;\n          top: 50%;\n          -webkit-transform: translateY(-50%);\n          -moz-transform: translateY(-50%);\n          -ms-transform: translateY(-50%);\n          -o-transform: translateY(-50%);\n          transform: translateY(-50%);\n        }\n        .hotProcess-container {\n          background-color: transparent !important;\n          height: auto;\n          min-height: 150px;\n          max-height: 200px;\n          overflow: auto;\n          border-radius: 10px;\n          .el-checkbox-group {\n            font-size: 0;\n            width: 100%;\n            .el-checkbox__label {\n              display: inline-block;\n              padding-left: 10px;\n              line-height: 19px;\n              font-size: 14px;\n              width: 182px;\n            }\n            .el-checkbox__input {\n              cursor: pointer;\n              outline: 0;\n              line-height: 1px;\n              vertical-align: middle;\n              margin-top: -6px;\n            }\n          }\n\n        }\n      }\n    }\n\n    .el-aside {\n      line-height: 40px;\n      margin-left: 10px;\n      border-radius: 10px;\n      min-width: 600px;\n    }\n    .authorized-mainLeft {\n      width: 50%;\n      background-color: #ffffff;\n      padding: 40px 50px;\n\n      & .el-textarea {\n        height: 176px;\n        resize: none;\n      }\n      & .mainLeft-operatorer {\n        margin-bottom: 0;\n        /*padding-top: 30px;*/\n      }\n      & .el-form-item span {\n        position: absolute;\n        left: 0px;\n      }\n\n      & .authorized-space {\n        text-align: left;\n        .userheight {\n          height: 25px !important;\n          font-weight: 600;\n        }\n      }\n    }\n\n    .authorized-mainLeft-padding {\n      padding: 0;\n    }\n\n    .authorized-mainRight {\n      border-left: 1px solid #F1F5F8;\n      width: 50%;\n\n      .mainRight-tree {\n        padding: 0 20px;\n        margin-top: 10px;\n        overflow: auto;\n      }\n    }\n\n    .el-main {\n      // background-color: #E9EEF3;\n      background-color: #ffffff;\n      color: #333;\n      // text-align: center;\n      // line-height: 160px;\n      margin: 0 10px;\n      border-radius: 10px;\n      overflow: hidden;\n      .compProcess {\n        height: 100%;\n        background: #ffffff;\n        border-radius: 8px;\n        .compProcess-title {\n          text-align: left;\n          height: 40px;\n          line-height: 40px;\n          font-size: 16px;\n          padding-left: 5px;\n        }\n        .compProcess-select {\n          background: #F8F9FB;\n          text-align: left;\n          height: 40px;\n          line-height: 40px;\n          font-size: 14px;\n          padding-left: 30px;\n          position: relative;\n        }\n        .compProcess-select:before {\n          content: '';\n          width: 4px;\n          height: 15px;\n          display: inline-block;\n          background: #1FA0FC;\n          position: absolute;\n          left: 20px;\n          top: 50%;\n          -webkit-transform: translateY(-50%);\n          -moz-transform: translateY(-50%);\n          -ms-transform: translateY(-50%);\n          -o-transform: translateY(-50%);\n          transform: translateY(-50%);\n        }\n      }\n    }\n\n    @media screen and (max-width: 1224px) {\n      .authorized .hotProcess-container .el-checkbox-group .el-checkbox__label {\n        width: 138px;\n        border: 1px solid red;\n      }\n      .authorized .hotProcess-container :nth-child(2n).el-checkbox {\n        margin-left: 49px;\n      }\n      .authorized .hotProcess-container :nth-child(2).el-checkbox {\n        margin-left: 49px !important;\n      }\n      .authorized .el-header .hotProcess .hotProcess-container {\n        width: 484px !important;\n      }\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n  @media screen and (min-width: 1201px) and (max-width: 1400px){\n    .authorized .el-aside {\n      min-width: 450px !important;\n    }\n  }\n  @media screen and (max-width: 1200px){\n    .authorized .el-aside {\n      min-width: 400px !important;\n    }\n  }\n  /* 保存 重置 按钮 图标颜色 */\n  .authorized {\n    .authorized-mainLeft {\n      .icon-cancel, .icon-preservation, .icon-export, .icon-screening {\n        color: #fff !important;\n      }\n    }\n    .authorized-mainRight {\n      .el-tree-node__content:hover, .el-tree--highlight-current .el-tree-node.is-current > .el-tree-node__content:hover {\n        color: #606266;\n        background: none;\n      }\n      /* 右侧树 */\n      .el-tree-node__content {\n        color: #606266;\n        background: none;\n      }\n      .el-tree-node__content:hover {\n        background: #f5f7fa !important;\n        color: #606266 !important;\n      }\n      .el-tree-node__content:visited {\n        background: #f5f7fa !important;\n        color: #606266 !important;\n      }\n      .el-tree-node__content:active {\n        background: #f5f7fa !important;\n        color: #606266 !important;\n      }\n    }\n    .authorized-mainLeft {\n      .el-date-editor.el-range-editor.el-input__inner.el-date-editor--daterange {\n        .el-input__icon.el-range__icon.el-icon-date {\n          position: absolute;\n          right: 0;\n        }\n      }\n      .el-select__caret.el-input__icon.is-show-close {\n        margin-right: 20px;\n      }\n    }\n  }\n  .el-scrollbar__view.el-select-dropdown__list {\n    .el-tree-node__content:hover {\n      color: #ffffff !important;\n      background: #1fa0fd !important;\n    }\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/views/transferStyle.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"authorized todoProcess\",style:({ 'height': _vm.bodyHeight + 'px'})},[_c('el-container',{staticClass:\"authorized-container\"},[_c('el-header',[_c('div',{staticClass:\"top-header\"},[_c('span',{staticClass:\"top-breadCrumb\"},[_c('router-link',{staticClass:\"authorized-breadCrumb\",staticStyle:{\"cursor\":\"pointer\"},attrs:{\"tag\":\"span\",\"to\":{ path: '/transferSetting' }}},[_vm._v(\"\\n              移交设置\\n            \")])],1),_vm._v(\" \"),_c('el-row',{staticClass:\"searchCom searchAndReset\",attrs:{\"type\":\"flex\",\"justify\":\"end\"}},[_c('el-button',{attrs:{\"round\":\"\",\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":_vm.btnSave}},[_vm._v(\"保存\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"round\":\"\",\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":_vm.btnCancle}},[_vm._v(\"取消\")])],1)],1)]),_vm._v(\" \"),_c('el-container',{staticStyle:{\"background\":\"#ffffff\"}},[_c('el-aside',{staticClass:\"authorized-mainLeft authorized-mainLeft-padding\"},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.form,\"label-width\":\"80px\"}},[_c('el-row',{staticStyle:{\"font-size\":\"14px\",\"margin\":\"10px 0\"}},[_c('el-col',{attrs:{\"span\":4}},[_c('span',[_vm._v(\"移交新增\")])])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"type\":\"flex\",\"justify\":\"start\"}},[_c('el-col',{attrs:{\"span\":18}},[_c('el-form-item',{staticClass:\"mainLeft-operatorer\",staticStyle:{\"font-size\":\"16px\"},attrs:{\"label\":\"\"}})],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"type\":\"flex\",\"justify\":\"start\"}},[_c('el-col',{attrs:{\"span\":18}},[_c('el-form-item',{staticClass:\"authorized-space\",attrs:{\"label\":\"移交人\"}},[_c('i',{staticClass:\"iconfont icon-member\",staticStyle:{\"position\":\"absolute\",\"z-index\":\"10\",\"right\":\"10px\"},on:{\"click\":function($event){_vm.openDailog('originator_dailog', 'auth')}}}),_vm._v(\" \"),_c('el-select',{ref:\"userIdPeo\",attrs:{\"filterable\":\"\",\"clearable\":\"\",\"remote\":\"\",\"reserve-keyword\":\"\",\"popper-class\":\"orgstates\",\"remote-method\":_vm.querySearchUserPeo,\"value-key\":\"userId\",\"loading\":_vm.loadingPerson},on:{\"change\":_vm.personChangePeo,\"visible-change\":_vm.visibleChangePeo},nativeOn:{\"click\":function($event){_vm.burialPointEvent('移交设置-添加页面-移交人输入')}},model:{value:(_vm.userForm.authorUser[0]),callback:function ($$v) {_vm.$set(_vm.userForm.authorUser, 0, $$v)},expression:\"userForm.authorUser[0]\"}},[_vm._l((_vm.orgPeopleStates),function(item,index){return _c('el-option',{key:index,attrs:{\"label\":item.value,\"value\":item}},[_c('div',{staticClass:\"userheight\"},[_vm._v(_vm._s(item.value)+\"(\"+_vm._s(item.userId)+\")\")]),_vm._v(\" \"),(item.companyName)?_c('div',{staticClass:\"fullpathsize\"},[_vm._v(_vm._s(item.companyName)+\" \"+_vm._s(item.orgFullPath))]):_c('div',{staticClass:\"fullpathsize\"},[_vm._v(_vm._s(item.orgFullPath))])])}),_vm._v(\" \"),_c('el-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.orgPeopleStates.length >= 10 && _vm.orgPeopleStates.length < _vm.originatorTotal),expression:\"orgPeopleStates.length >= 10 && orgPeopleStates.length < originatorTotal\"}],staticClass:\"load-more\",attrs:{\"loading\":_vm.originatorLoading},on:{\"click\":function($event){_vm.loadMore(_vm.searchValParam)}}},[_vm._v(\"\\n                    点击加载更多\\n                    \"),_c('i',{staticClass:\"el-icon-caret-bottom\",staticStyle:{\"color\":\"#119cff\"}})])],2)],1)],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"type\":\"flex\"}},[_c('el-col',{attrs:{\"span\":18}},[_c('el-form-item',{staticClass:\"authorized-space\",attrs:{\"label\":\"被移交人\"}},[_c('i',{staticClass:\"iconfont icon-member\",staticStyle:{\"position\":\"absolute\",\"z-index\":\"10\",\"right\":\"10px\"},on:{\"click\":function($event){_vm.openDailog('originator_dailog', 'beAuth')}}}),_vm._v(\" \"),_c('el-select',{ref:\"userId\",attrs:{\"filterable\":\"\",\"clearable\":\"\",\"remote\":\"\",\"reserve-keyword\":\"\",\"popper-class\":\"orgstates\",\"placeholder\":\"\",\"remote-method\":_vm.querySearchUser,\"value-key\":\"userId\",\"loading\":_vm.loadingPerson},on:{\"change\":_vm.personChange,\"visible-change\":_vm.visibleChange},nativeOn:{\"click\":function($event){_vm.burialPointEvent('移交设置-添加页面-被移交人输入')}},model:{value:(_vm.userForm.authorizedUser[0]),callback:function ($$v) {_vm.$set(_vm.userForm.authorizedUser, 0, $$v)},expression:\"userForm.authorizedUser[0]\"}},[_vm._l((_vm.orgStates),function(item,index){return _c('el-option',{key:index,attrs:{\"label\":item.value,\"value\":item}},[_c('div',{staticClass:\"userheight\"},[_vm._v(_vm._s(item.value)+\"(\"+_vm._s(item.userId)+\")\")]),_vm._v(\" \"),(item.companyName)?_c('div',{staticClass:\"fullpathsize\"},[_vm._v(_vm._s(item.companyName)+\" \"+_vm._s(item.orgFullPath))]):_c('div',{staticClass:\"fullpathsize\"},[_vm._v(_vm._s(item.orgFullPath))])])}),_vm._v(\" \"),_c('el-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.orgStates.length >= 10 && _vm.orgStates.length < _vm.originatorTotal),expression:\"orgStates.length >= 10 && orgStates.length < originatorTotal\"}],staticClass:\"load-more\",attrs:{\"loading\":_vm.originatorLoading},on:{\"click\":function($event){_vm.loadMore(_vm.searchValParam)}}},[_vm._v(\"\\n                    点击加载更多\\n                    \"),_c('i',{staticClass:\"el-icon-caret-bottom\",staticStyle:{\"color\":\"#119cff\"}})])],2)],1)],1)],1),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":18}},[_c('el-form-item',{staticClass:\"authorized-space\",attrs:{\"label\":\"流程描述\"}},[_c('el-input',{staticStyle:{\"height\":\"auto\"},attrs:{\"type\":\"textarea\"},nativeOn:{\"click\":function($event){_vm.burialPointEvent('移交设置-添加页面-流程描述')}},model:{value:(_vm.userForm.description),callback:function ($$v) {_vm.$set(_vm.userForm, \"description\", $$v)},expression:\"userForm.description\"}})],1)],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"type\":\"flex\",\"justify\":\"start\"}},[_c('el-col',{attrs:{\"span\":18}},[_c('el-form-item',{staticClass:\"mainLeft-operatorer\",attrs:{\"label\":\"操作人\"}},[_c('span',[_vm._v(_vm._s(_vm.userForm.operator))])])],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"type\":\"flex\",\"justify\":\"start\"}},[_c('el-col',{attrs:{\"span\":18}},[_c('el-form-item',{staticClass:\"mainLeft-operatordate\",attrs:{\"label\":\"操作日期\"}},[_c('span',[_vm._v(_vm._s(_vm.userForm.operationDate))])])],1)],1)],1)],1),_vm._v(\" \"),_c('el-container',{staticClass:\"authorized-mainRight\"},[_c('el-header',{ref:\"rightHeader\",staticClass:\"processHeader\",staticStyle:{\"height\":\"auto !important\",\"border-bottom\":\"0\"}},[_c('div',{staticClass:\"hotProcess\"},[_c('div',{staticClass:\"hotProcess-title\"},[_c('el-row',{staticStyle:{\"padding\":\"10px 30px 10px 0\"}},[_c('el-col',{attrs:{\"span\":9}},[_c('span',{staticClass:\"img-title\"},[_vm._v(\"经常审批的流程\")])]),_vm._v(\" \"),_c('el-col',{staticStyle:{\"margin-top\":\"-11px\",\"float\":\"right\"},attrs:{\"span\":14}},[_c('div',{staticStyle:{\"cursor\":\"pointer\",\"float\":\"right\"},on:{\"click\":_vm.showToggle}},[_c('span',{staticStyle:{\"font-size\":\"14px\"},domProps:{\"textContent\":_vm._s(_vm.arrt)}}),_vm._v(\" \"),_c('i',{class:_vm.icon,staticStyle:{\"color\":\"#1fa0fb\",\"font-weight\":\"bolder\",\"font-size\":\"18px\"}})]),_vm._v(\" \"),_c('span',{staticStyle:{\"margin-right\":\"15px\",\"float\":\"right\"}},[_c('el-checkbox',{attrs:{\"indeterminate\":_vm.isIndeterminate},on:{\"change\":_vm.handleCheckAllChange},model:{value:(_vm.checkAll),callback:function ($$v) {_vm.checkAll=$$v},expression:\"checkAll\"}},[_vm._v(\"全选\")])],1)])],1)],1),_vm._v(\" \"),_c('div',[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showList),expression:\"showList\"}],staticClass:\"hotProcess-container\"},[_c('div',{ref:\"ele\"},[_c('el-checkbox-group',{attrs:{\"size\":\"small\"},on:{\"change\":_vm.handleCheckedProcessChange},model:{value:(_vm.chekedIDs),callback:function ($$v) {_vm.chekedIDs=$$v},expression:\"chekedIDs\"}},_vm._l((_vm.processList),function(item,index){return _c('el-checkbox',{key:index,attrs:{\"title\":item.processName,\"label\":item}},[_vm._v(_vm._s(item.processName)+\"\\n                    \")])})),_vm._v(\" \"),(!_vm.loading&&_vm.hasData)?_c('div',{on:{\"click\":_vm.getMore}},[_c('el-button',{attrs:{\"type\":\"text\"}},[_vm._v(\"点击加载更多\")])],1):_vm._e(),_vm._v(\" \"),(!_vm.hasData)?_c('div',{staticStyle:{\"text-align\":\"center\",\"margin\":\"15px 0\"}},[_c('span',[_vm._v(\"无更多数据\")])]):_vm._e()],1),_vm._v(\" \"),(_vm.loading)?_c('div',{staticClass:\"loading-box\"},[_c('i',{staticClass:\"el-icon-loading\"})]):_vm._e()])])])]),_vm._v(\" \"),_c('el-main',{staticClass:\"loadingtext\",staticStyle:{\"height\":\"100%\",\"padding\":\"0\",\"margin\":\"0\"}},[_c('div',{staticClass:\"compProcess\"},[_c('div',{staticStyle:{\"height\":\"100%\"}},[_c('div',{staticClass:\"compProcess-select\"},[_c('span',[_vm._v(\"全部流程\")]),_vm._v(\" \"),_c('el-select',{ref:\"selectTree\",staticStyle:{\"width\":\"300px\",\"margin-left\":\"15px\"},attrs:{\"placeholder\":\"请选择\"},nativeOn:{\"click\":function($event){_vm.burialPointEvent('移交测试-添加页面-组织选择')}},model:{value:(_vm.organizeName),callback:function ($$v) {_vm.organizeName=$$v},expression:\"organizeName\"}},[_c('el-option',{staticClass:\"organize-list-box\",staticStyle:{\"height\":\"auto\",\"padding\":\"0 !important\"},attrs:{\"value\":\"\",\"disabled\":true}},[_c('div',{staticStyle:{\"height\":\"100%\",\"width\":\"100%\"}},[_c('el-tree',{ref:\"orgtree\",attrs:{\"data\":_vm.organizeList,\"highlight-current\":true,\"node-key\":\"orgID\",\"default-expand-all\":\"\",\"expand-on-click-node\":false,\"empty-text\":\"暂无数据\",\"props\":_vm.propsOrg},on:{\"node-click\":_vm.selectTreeClick}})],1)])],1),_vm._v(\" \"),_c('span',{staticStyle:{\"margin-right\":\"30px\",\"float\":\"right\"}},[_c('el-checkbox',{attrs:{\"indeterminate\":_vm.indeterminateProcess},on:{\"change\":_vm.setCheckedAllNodes},model:{value:(_vm.processCheckAll),callback:function ($$v) {_vm.processCheckAll=$$v},expression:\"processCheckAll\"}},[_vm._v(\"全选\")])],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"mainRight-tree\",style:(_vm.showList ? { 'height': _vm.bodyHeight - _vm.headHeight - 150 + 'px' } : { 'height': _vm.bodyHeight - 200 + 'px' })},[_c('el-tree',{ref:\"tree\",attrs:{\"highlight-current\":true,\"data\":_vm.thirdData,\"node-key\":\"id\",\"default-checked-keys\":_vm.checkedKeys,\"default-expanded-keys\":_vm.categoryID,\"show-checkbox\":\"\",\"props\":_vm.props},on:{\"check-change\":_vm.handleCheckChanges,\"node-expand\":_vm.handleNodeExpand,\"node-click\":_vm.handleNodeClick,\"check\":function($event){_vm.burialPointEvent('移交设置-添加页面-全部流程[单选]')}}})],1)])])])],1)],1)],1),_vm._v(\" \"),(_vm.showDialog)?_c(_vm.comp.component,{tag:\"component\",attrs:{\"childDataUrl\":_vm.childDataUrl,\"queryName\":_vm.queryName,\"oneCheck\":_vm.oneCheck},on:{\"hideComponent\":_vm.hideComponent,\"sureSubmit\":_vm.showMsgfromchild}}):_vm._e()],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-fab12b66\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/views/transferStyle.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-fab12b66\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./transferStyle.vue\")\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-fab12b66\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=1!./transferStyle.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./transferStyle.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./transferStyle.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-fab12b66\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./transferStyle.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-fab12b66\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/views/transferStyle.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}