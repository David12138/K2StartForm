
<div id="app" class="bg-white pd-24 height-100">

    <el-row class="header-search">
        <el-col :span="4">
            <el-button size="medium" type="info" class="btn" plain :disabled="selectRows.length == 0" v-on:click="dialogVisible = true">{{ $t("Portal.BusinessProcessTaskBatchApproval") }}</el-button>
        </el-col>
        <el-col :span="20" class="text-align-right">
            <el-input size="medium" :placeholder="$t('Portal.PleaseEnterContent')" v-model="form.keyword" class="search" v-on:keyup.enter.native="search()"></el-input>
            <el-button size="medium" type="primary" v-on:click="search()" plain>{{ $t("Portal.BusinessProcessTaskSearch") }}</el-button>
            <el-button size="medium" type="primary" class="search-btn" :loading="btnLoading" v-on:click="exportData()" plain>{{ $t("Portal.Export") }}</el-button>
            <!-- 高级搜索 -->
            <advancedsearch :isloading="loading"
                            ref="advancedsearch"
                            :form-items="formItems"
                            v-on:search="search"
                            v-on:reset="reset"/>
        </el-col>
    </el-row>

    <modaltable :table-columns="tableColumns"
                :table-data="tableData"
                :form="form"
                :loading="loading"
                :isflowviewurl="true"
                :selection="true"
                v-on:handleSort="handleChange"
                v-on:handleSelectRow="handleSelectionChange" />
    <!-- 分页 -->
    <pages :total="total" :form="form" v-on:change="handleChange" />

    <!-- 批量审批 -->
    <el-dialog :visible.sync="dialogVisible" :title="$t('Portal.BusinessProcessTaskBatchApproval')" class="my-dialog-style" v-if="dialogVisible">
        <el-form :model="dialogForm" :rules="rules" label-width="100px" ref="dialogForm" size="mini">
            <el-form-item :label="$t('Portal.BusinessProcessTaskBatchApprovalOpinion')" prop="Comment">
                <el-input type="textarea" :autosize="{ minRows: 4, maxRows: 6}" v-model="dialogForm.Comment"></el-input>
            </el-form-item>
            <el-form-item :label="$t('Portal.BusinessProcessTaskBatchApprovalApprover')">{{ dialogForm.userName }}</el-form-item>
            <el-form-item :label="$t('Portal.BusinessProcessTaskBatchApprovalTime')">{{ dialogForm.time }}</el-form-item>
        </el-form>
        <div slot="footer" class="dialog-footer">
            <el-button v-on:click="handleMutliApprove(false)" :loading="btnLoading" class="cancle" plain>{{ $t("Portal.BusinessProcessCancel") }}</el-button>
            <el-button type="primary" v-on:click="handleMutliApprove(true)" :loading="btnLoading" class="submit" plain>{{ $t("Portal.BusinessProcessConfirm") }}</el-button>
        </div>
    </el-dialog>
</div>
<script src="~/Scripts/portal/advancedsearch.js"></script>
<script src="~/Scripts/portal/pages.js"></script>
<script src="~/Scripts/portal/modalTable.js"></script>

<script>
    new Vue({
        el: '#app',
        i18n: i18n,
        data: function() {
            return {
               form: {
                    SortField: null, // 排序字段
                    SortDirection: null, // 排序方式 asc or desc
                    PageIndex: 1, // 当前页码
                    PageSize: 20, // 页面码大小
                    keyword: '',
                }, // 表单数据
                tableData: [],
                total: 0,
                loading: false,
                selectRows: [], // 表格选中 的数据
                dialogVisible: false,
                dialogForm: {
                    Comment: '',
                    userName: sessionStorage.getItem('userName'),
                    time: moment(new Date()).format('YYYY-MM-DD')
                },
                rules: {
                    Comment: [
                        { required: true, message: ' ', trigger: 'blur' },
                    ]
                },
                btnLoading: false,
                // formItems: ['编号', '主题', '申请人', '申请日期', '流程名称', '流程类别', '申请人部门','流程摘要'],
                //,formItems: [
                //    advancedSearchItem.ProcessNum,
                //    advancedSearchItem.FormSubject,
                //    advancedSearchItem.Originator,
                //    advancedSearchItem.ApplicationDate,
                //    advancedSearchItem.ProcessName,
                //    advancedSearchItem.ID
                //    //advancedSearchItem.Summary
                //]

                // tableColumns: ['selection','FlowViewUrl', '流程编号', '紧急度', '流程名称', '流程主题','申请人','节点名称', '开始时间', '任务到达时间']
                //tableColumns: [
                //    tableColumn.Folio,
                //    tableColumn.ProcessName,
                //    tableColumn.FormSubject,
                //    tableColumn.SubmitterDisplayName,
                //    tableColumn.ApplicantDisplayName,
                //    tableColumn.ActivityDisplayName,
                //    tableColumn.SubmitDate1,
                //    tableColumn.SubmitDate2
                //]


            }
        },
        computed: {

            tableColumns: {

                get: function () {

                    tableColumn.Folio.label = this.$t('Portal.HomeProcessCode');
                    tableColumn.Folio.width = "160";
                    tableColumn.ProcessName.label = this.$t('Portal.HomeProcessName');
                    tableColumn.FormSubject.label = this.$t('Portal.HomeProcessTitle');
                    tableColumn.SubmitterDisplayName.label = this.$t('Portal.HomeProcessWrittenBy');
                    tableColumn.SubmitterDisplayName.width = "200";
                    tableColumn.ApplicantDisplayName.label = this.$t('Portal.HomeProcessApplicant');
                    tableColumn.ApplicantDisplayName.width = "200";
                    tableColumn.ActivityDisplayName.label = this.$t('Portal.HomeProcessNodeName');
                    tableColumn.ActivityDisplayName.width = "220";
                    tableColumn.SubmitDate1.label = this.$t('Portal.HomeProcessApplicationDate');
                    tableColumn.SubmitDate1.width = "160";
                    tableColumn.TaskArriveDate.label = this.$t('Portal.HomeProcessTaskArrivalTime');
                    tableColumn.TaskArriveDate.width = "160";

                    tableColumn.ProcessingDate.label = this.$t('Portal.HomeProcessApprovalTime');
                    tableColumn.FinishDate.label = this.$t('Portal.HomeProcessEndTime');
                    tableColumn.FinishDate.width = "160";
                    tableColumn.StatusName.label = this.$t('Portal.HomeProcessStatus');
                    tableColumn.StatusName.width = "80";
                    tableColumn.ApprovalUsers.label = this.$t('Portal.HomeProcessCurrentProcessor');
                    tableColumn.ReceiverEndDate.label = this.$t('Portal.HomeProcessReviewDate');
                    tableColumn.ReceiverEndDate.width = "160";
                    tableColumn.IsReadName.label = this.$t('Portal.HomeProcessReviewStatus');
                    tableColumn.OriginatorName.label = this.$t('Portal.HomeProcessCCFrom');
                    tableColumn.OriginatorName.width = "200";
                    tableColumn.ReceiverDate.label = this.$t('Portal.HomeProcessCCTime');
                    tableColumn.ReceiverDate.width = "160";
                    tableColumn.SubmitDate.label = this.$t('Portal.HomeProcessCCArrivalTime');
                    tableColumn.SubmitDate.width = "160";



                    return [
                        tableColumn.Folio,
                        // tableColumn.ProcessName,
                        tableColumn.FormSubject,
                        // tableColumn.SubmitterDisplayName,
                        tableColumn.ApplicantDisplayName,
                        tableColumn.ActivityDisplayName,
                        tableColumn.SubmitDate1,
                        // tableColumn.TaskArriveDate,
                        {
                            prop: 'WaittingTime',
                            label: this.$t('Portal.HomeProcessWaitingTime'),
                            width: 160,
                            timeLen: true,
                            startProp: 'StartDate'
                        }
                    ];

                }
            }

            , formItems: {

                get: function () {
                    //001待审
                    advancedSearchItem.ProcessNum.label = this.$t('Portal.HomeSearchProcessNum');
                    advancedSearchItem.FormSubject.label = this.$t('Portal.HomeSearchFormSubject');
                    advancedSearchItem.Originator.label = this.$t('Portal.HomeSearchOriginator');
                    advancedSearchItem.ApplicationDate.label = this.$t('Portal.HomeSearchApplicationDate');
                    advancedSearchItem.ProcessName.label = this.$t('Portal.HomeSearchProcessName');
                    advancedSearchItem.ID.label = this.$t('Portal.HomeSearchID');
                    //002已审
                    advancedSearchItem.processingTime.label = this.$t('Portal.HomeSearchProcessingTime');
                    advancedSearchItem.ProcessStatus.label = this.$t('Portal.HomeSearchProcessStatus');
                    advancedSearchItem.EndDate.label = this.$t('Portal.HomeSearchEndDate');
                    advancedSearchItem.Summary.label = this.$t('Portal.HomeSearchSummary');
                    //003传阅
                    advancedSearchItem.SubmitterAccount.label = this.$t('Portal.HomeProcessCCFrom');
                    //004抄送
                    advancedSearchItem.FormCCUser.label = this.$t('Portal.HomeSearchWrittenBy');
                    advancedSearchItem.CcDate.label = this.$t('Portal.HomeProcessCCTime');
                    advancedSearchItem.ReviewDate.label = this.$t('Portal.HomeProcessReviewDate');
                    advancedSearchItem.ReaderStatus.label = this.$t('Portal.HomeProcessReviewStatus');



                    return [
                        advancedSearchItem.ProcessNum,
                        advancedSearchItem.FormSubject,
                        advancedSearchItem.Originator,
                        advancedSearchItem.ApplicationDate,
                        //advancedSearchItem.ProcessName,
                        advancedSearchItem.ID
                        //advancedSearchItem.Summary
                    ];

                }
            }

        },
        mounted: function() {
            this.getDate();
            this.$nextTick(function () {
                getKStarWorklistTaskCount(window.VM)
            });//更新菜单数量
        },
        methods: {
            // 搜索
            search: function (val) {
                var form = {
                    SortField: this.form.SortField,
                    SortDirection: this.form.SortDirection,
                    PageIndex: 1,
                    PageSize: this.form.PageSize,
                    keyword: this.form.keyword
                }
                this.form = form
                if (val) {
                    for(var i in val) {
                        this.form[i] = val[i]
                    }
                }

                this.getDate();
                portalLog("待审任务-业务流程-搜索", "/Portal/WorkFlow/GetWorklistBusinessProcess");
            },
            // 重置
            reset: function() {
                var form = {
                    SortField: this.form.SortField,
                    SortDirection: this.form.SortDirection,
                    PageIndex: 1,
                    PageSize: this.form.PageSize,
                    keyword: this.form.keyword
                }
                this.form = form
                this.getDate();
                portalLog("待审任务-业务流程-搜索", "/Portal/WorkFlow/GetWorklistBusinessProcess");
            },
            // 获取数据
            getDate: function(val) {
                var that = this
                this.loading = true
                GetWorklistBusinessProcess(this.form).then(function(res) {
                    that.loading = false;
                    that.tableData = res.data.data.item;
                    that.total = res.data.data.total;
                  
                })
            },
            // 改变条数/排序
            handleChange: function(val) {
                this.form = val
                this.getDate()
            },
            // 批量审批确定/取消
            handleMutliApprove: function(val) {
                // 提交
                if (val) {
                    var list = []
                    var that = this
                    this.$refs['dialogForm'].validate(function(valid) {
                        if (valid) {
                            that.btnLoading = true
                            that.selectRows.map(function(item) {
                                list.push({
                                    SharedUser: item.SharedUser,
                                    WorkItemId: item.Id,
                                    Comment: that.dialogForm.Comment
                                })
                            })
                            MutliApprove(list).then(function (res) {
                                that.btnLoading = false
                                if (res.data && res.data.code == 200) {
                                    that.$message.success(that.$t('Portal.BusinessProcessTaskBatchApprovalSuccess'))//'审批成功！'
                                }
                                that.form.PageIndex = 1
                                that.getDate()
                                that.$refs['dialogForm'].resetFields();
                                that.dialogVisible = false
                                getKStarWorklistCount(window.that)
                            }).catch(function (err) {
                                that.btnLoading = false
                                that.form.PageIndex = 1
                                that.getDate()
                                that.$refs['dialogForm'].resetFields();
                                that.dialogVisible = false
                                getKStarWorklistCount(window.that)
                                that.$message.error(that.$t('Portal.BusinessProcessTaskBatchApprovalError') + err.response.data.message) //'审批失败!ERROR MESSAGE:'
                            });
                            portalLog("待审任务-业务流程-批量审批", "/Portal/WorkFlow/MutliApprove");

                        } else {
                            console.log('error submit!!');
                            return false;
                        }
                    });
                } else {
                    this.$refs['dialogForm'].resetFields();
                    this.dialogVisible = false
                }
            },
            handleSelectionChange: function(val) {
                this.selectRows = val
            },
            exportData: function () {
                this.btnLoading = true;
                if (this.total > 5000) {
                    that.$message.error(this.$t('Portal.HomeLeftMenuBusinessProcessTask') + this.$t('Portal.ExportErrorTips'));
                    this.btnLoading = false;
                    return false;
                }

                var advancedSearchForm = this.$refs["advancedsearch"].form;
                var parameter = "keyword=" + this.form.keyword;
                if (advancedSearchForm) {
                    for (var field in advancedSearchForm) {
                        parameter += "&" + field + "=" + advancedSearchForm[field];
                    }
                }

                this.btnLoading = false;
                var url = "/Portal/WorkFlow/ExportMyPendingTask";
                window.location.href = url + "?" + parameter;
            }
        }
    })
</script>


